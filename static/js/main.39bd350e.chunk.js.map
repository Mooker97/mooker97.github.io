{"version":3,"sources":["themes/colors.js","themes/themes.js","components/index/ImageBox.js","components/index/LoadingWheel.js","cache/index.js","functions/index.js","cache/groups.js","calls/index.js","calls/groups.js","calls/invites.js","calls/users.js","validation/index.js","cache/Invites.js","actions/updates.js","actions/users.js","validation/users.js","components/login/LoginPage.js","components/login/RegisterPage.js","components/login/LoginHome.js","actions/invites.js","components/Modal/list/InviteList.js","components/Modal/ActiveMenu.js","components/Modal/Menu.js","components/Modal/form/FormInputs.js","components/Modal/form/Form.js","components/Modal/Modal.js","components/Main/BottomNav.js","components/Main/Header.js","components/profile/ProfileHead.js","components/index/Toggler.js","components/profile/ProfileOptions.js","components/profile/ProfileHome.js","components/calendar/CalendarHome.js","components/notes/NotesHome.js","actions/groups.js","components/home/GroupCard.js","components/group/ProjectCard.js","components/index/ActionIcons.js","calls/tasks.js","actions/tasks.js","validation/groups.js","validation/tasks.js","validation/projects.js","functions/validation.js","components/projects/TaskCard.js","components/invites/InviteCard.js","components/index/Card.js","components/calendar/CalendarPreview.js","components/index/ActionButtons.js","components/home/HomeHead.js","components/home/HomeActions.js","components/index/NotFound.js","components/home/GroupFeed.js","components/index/InfoArea.js","components/index/InfoButtons.js","components/index/HeadBanner.js","components/group/GroupHead.js","calls/projects.js","actions/projects.js","components/group/GroupActions.js","components/group/ProjectFeed.js","components/index/ErrorPage.js","components/projects/ProjectHead.js","components/projects/ProjectActoins.js","components/projects/TaskFeed.js","components/invites/AcceptDecline.js","components/invites/InviteHead.js","components/invites/InviteFeed.js","components/Main/Feed.js","components/Main/Body.js","components/Main/Main.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["dkPallete","myPallete","prim","sec","dg","su","ed","li","md","dk","bg","bgdk","tp","MainTheme","createTheme","palette","primary","main","colors","secondary","DarkTheme","background","paper","default","text","type","ModalTheme","info","error","ModalThemedk","GreenRed","BlueRed","BlackWhite","ImageBox","props","classes","makeStyles","root","display","justifyContent","alignItems","img","maxHeight","height","width","useStyles","className","src","alt","defaultProps","LoadingWheel","minHeight","variant","flexDirection","spinnerBox","spinner","position","imageBox","CircularProgress","size","thickness","color","baseCache","key","input","undefined","exp","val","data","expiry","Date","now","toReturn","ls","suffixCache","suffix","clearCache","clear","setCacheUpdating","updating","checkCacheUpdating","checkCacheIsValid","setCacheExpired","checkForCacheUpdate","reRender","sufix","delayMS","interVal","setInterval","clearInterval","setCacheWhenUpdated","setter","tokenCache","token","checkSignin","prefCache","filterArrayByProperties","arr","filter","item","filterArrayForUUID","uuid","groupCache","groupContentCache","handleCallError","err","response","console","log","request","message","BaseUrl","PORTNo","baseCall","url","a","method","Axios","headers","res","userCall","myGroupsCall","groupContentCall","groupAddCall","groupDeleteCall","groupEditCall","myInvitesCall","inviteReplyCall","groupID","reply","sendInviteCall","userName","roleID","loginCall","registerCall","myPrefCall","prefEditCall","checkResponse","status","checkInputHasKeys","keys","Object","length","forEach","extractInputKeys","output","checkForChars","str","pattern","RegExp","test","inviteCache","baseUpdate","call","cache","callRes","myGroupsUpdate","groupContentUpdate","groupContentRes","signInAction","loginRes","xAuth","registerUser","confirm","regRes","getMyPrefs","editPrefs","invalidSignIn","username","password","invalidRegister","validUserName","validEmail","email","validPassword","name","paddingBottom","Colors","form","margin","border","padding","borderRadius","btn","label","marginLeft","textAlign","header","fontSize","flashMsg","borders","LoginPage","useState","usernameState","setUsernameState","passwordState","setPasswordState","ValidState","setValidState","loginClicked","e","invalidMsg","loginControls","setState","appControls","Typography","component","TextField","onChange","target","value","Button","onClick","ThemeProvider","theme","paddingTop","agreement","RegisterPage","confirmState","setConfirmState","emailState","setEmailState","registerClicked","Grid","container","xs","Checkbox","LoginHome","loginState","setLoginState","loginContent","logo","getMyInvites","replyToInvite","group","sendInvite","InviteList","modalTheme","left","top","divider","buttonGroup","float","listData","head","Divider","rounded","modalControls","title","subtitle","inputs","submit","itWorked","ActiveMenu","test1Clicked","toLog","activeMenuButtons","action","ButtonGroup","map","Menu","refreshClicked","tokenData","inputDiv","required","FormInputs","inputChanged","formInputControls","updateInputs","checkBoxChecked","checked","requiredHTML","prefillText","prefill","inputHTML","defaultValue","startChecked","checkTrue","defaultChecked","alert","boxSizing","Form","formInputState","setFormInputState","ValidationState","SetValidationState","curState","inputName","string","oldState","clearInputs","formData","checkValid","Modal","content","open","onClose","bottom","flex","minWidth","maxWidth","BottomNAv","BottomNavigation","bodyState","event","newValue","bodyControls","BottomNavigationAction","icon","PlaylistAddCheck","ChatBubble","CalendarToday","Person","Header","leftButton","IconButton","openMenu","pageIndicator","feedControls","goBack","ArrowBack","AppBar","Search","heading","marginTop","fullWidth","ProfileHead","Toggler","ToggleOff","onNow","ToggleOn","whenChanged","ProfileOptions","DarkModeToggle","darkMode","userPrefs","options","outPut","button","ProfileHome","CalendarHome","NotesHome","getMyGroups","getContentForGroup","addNewGroup","rand","Math","floor","random","imgLink","deleteGroup","editGroup","body","linkArea","link","GroupCard","linkClicked","setStateProjects","cardData","CardActionArea","groupName","varient","pinnedMessage","edit","ProjectCard","setStateTasks","projectName","ActionIcons","overflow","direction","actionIcons","taskAddCall","parentID","taskDeleteCall","taskEditCall","addNewTask","deleteTask","editTask","validGroupName","validTaskName","validProjectName","validations","groupAdd","check","invalidAddGroup","failedMsg","groupUpd","invalidEditGroup","projectAdd","invalidAddProject","projectUpd","invalidEditProject","taskAdd","taskName","invalidAddTask","taskUpd","invalidEditTask","userAdd","invalidAddUser","userUpd","invalidEditUser","inviteAdd","Del","toLowerCase","validationPicker","dataType","validator","TaskCard","checkColor","completed","checkClicked","groupParentID","projectParentID","Delete","Edit","Check","actionControls","InviteCard","displayControls","Card","cardContent","cardType","groupData","projectData","taskData","inviteData","CalendarPreview","ActionButtons","holderDisplay","handleArrow","ArrowDropDown","handleRadius","isOpen","ArrowDropUp","zIndex","right","holder","handle","handleIcon","toggle","HomeHead","HomeActions","Add","close","Email","iconBox","words","NotFound","DisplayState","setDisplayState","setTimeout","Block","GroupFeed","groupsState","setGroupsState","groupsControls","setStateToCache","groupsArr","Container","useStlyes","InfoArea","InfoButtons","infoButtonClicked","marginBottom","HeadBanner","listHead","GroupHead","class","projectAddCall","projectDeleteCall","projectEditCall","addNewProject","deleteProject","editProject","GroupActions","reRenderFeed","setStateGroups","PersonAdd","getList","ProjectFeed","contentArr","listContent","projects","groupByUUIDCache","ErrorPage","ProjectHead","ProjectActions","TaskFeed","parentUUID","curProject","tasksArr","tasks","borderBottom","AcceptDecline","AcceptClicked","DeclineClicked","InviteHead","InviteFeed","displayState","invite","invitesArr","Array","isArray","Feed","feedHTML","Body","actionOpenState","setActionOpenState","Main","setBodyState","feedState","setFeedState","feedItemState","setFeedItemState","feedRefreshState","setFeedRefreshState","taskParentID","mode","newState","dropLastParentID","splice","delay","oldVal","App","rootLight","rootDark","appState","setAppState","themeState","setThemeState","rootClassState","setRootClassState","modalThemeState","setModalThemeState","appRefreshState","setAppRefreshState","modalState","setmodalState","reRenderApp","themeControls","rootState","setRootState","newClass","setModalState","onRender","useEffect","appContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.39bd350e.chunk.js","sourcesContent":["// didnt use could be cool\r\n\r\nconst myPallete = {\r\n  prim: \"#67a5d6\",\r\n  sec: \"#8b46bf\",\r\n\r\n  dg: \"#da4a4a\",\r\n  su: \"#5fd677\",\r\n  ed: \"#0077ff\",\r\n\r\n  li: \"#ffffff\",\r\n  md: \"#c6c8c9\",\r\n  dk: \"#140927\",\r\n  bg: \"#e5e8f0\",\r\n  bgdk: \"#444444\",\r\n  tp: \"#14092740\",\r\n};\r\n\r\nexport const dkPallete = {\r\n  prim: \"#206EA9\",\r\n  sec: \"#570E8F\",\r\n\r\n  dg: \"#da4a4a\",\r\n  su: \"#5fd677\",\r\n  ed: \"#0077ff\",\r\n\r\n  li: \"#ffffff\",\r\n  md: \"#c6c8c9\",\r\n  dk: \"#140927\",\r\n  bg: \"#444444\",\r\n  tp: \"#14092740\",\r\n};\r\n\r\nexport default myPallete;\r\n","import { createTheme } from \"@material-ui/core/styles\";\r\nimport colors, { dkPallete } from \"./colors.js\";\r\n\r\n// helpful for consistancy and ease of use\r\n\r\nexport const MainTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: `${colors.prim}`,\r\n    },\r\n    secondary: {\r\n      main: `${colors.sec}`,\r\n    },\r\n    // type: \"dark\",\r\n  },\r\n});\r\n\r\nexport const DarkTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: `${dkPallete.prim}`,\r\n    },\r\n    secondary: {\r\n      main: `${colors.sec}`,\r\n    },\r\n    background: {\r\n      paper: \"#333\",\r\n      default: \"#222\",\r\n    },\r\n    text: {\r\n      primary: \"#ffffff\",\r\n      default: \"#222\",\r\n    },\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nexport const ModalTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: `${dkPallete.prim}`,\r\n    },\r\n    secondary: {\r\n      main: `${colors.sec}`,\r\n    },\r\n    info: {\r\n      main: `${colors.sec}`,\r\n    },\r\n    error: {\r\n      main: `${colors.li}`,\r\n    },\r\n    background: {\r\n      paper: colors.bg,\r\n      default: colors.bg,\r\n    },\r\n    text: {\r\n      primary: \"#222\",\r\n      default: \"#222\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const ModalThemedk = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: `${dkPallete.prim}`,\r\n    },\r\n    secondary: {\r\n      main: `${colors.sec}`,\r\n    },\r\n    background: {\r\n      paper: \"#555\",\r\n      default: \"#555\",\r\n    },\r\n    text: {\r\n      primary: \"#ffffff\",\r\n      default: \"#222\",\r\n    },\r\n  },\r\n});\r\n\r\n// Modal Theme\r\nexport const GreenRed = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#5fd677\",\r\n    },\r\n    secondary: {\r\n      main: \"#da4a4a\",\r\n    },\r\n    // type: \"dark\",\r\n  },\r\n});\r\n\r\n// modal theme dark\r\nexport const BlueRed = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0077ff\",\r\n    },\r\n    secondary: {\r\n      main: \"#da4a4a\",\r\n    },\r\n    // type: \"dark\",\r\n  },\r\n});\r\n\r\nexport const BlackWhite = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n    },\r\n    secondary: {\r\n      main: \"#ffffff\",\r\n    },\r\n    // type: \"dark\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction ImageBox(props) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    img: {\r\n      maxHeight: props.height,\r\n      width: props.width,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <img className={classes.img} src={props.img} alt={props.alt} />\r\n    </div>\r\n  );\r\n}\r\n\r\nImageBox.defaultProps = {\r\n  height: \"auto\",\r\n  width: \"auto\",\r\n  alt: \"\",\r\n};\r\n\r\nexport default ImageBox;\r\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ImageBox from \"./ImageBox\";\r\n\r\nfunction LoadingWheel(props) {\r\n  let minHeight = \"65vh\";\r\n  if (props.variant === \"small\") {\r\n    minHeight = \"320px\";\r\n  }\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      minHeight: minHeight,\r\n      display: \"flex\",\r\n      justifyContent: \"space-evenly\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n    spinnerBox: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n    spinner: {\r\n      position: \"absolute\",\r\n    },\r\n  });\r\n  let imageBox = \"\";\r\n  if (props.variant === \"logo\") {\r\n    imageBox = <ImageBox img={\"img/logo.svg\"} height={150} />;\r\n  }\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {imageBox}\r\n      <div className={classes.spinnerBox}>\r\n        <CircularProgress size={120} />\r\n        <CircularProgress\r\n          className={classes.spinner}\r\n          size={60}\r\n          thickness={3.1}\r\n          color=\"secondary\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoadingWheel.defaultProps = {\r\n  variant: \"default\",\r\n  minHeight: \"65vh\",\r\n};\r\n\r\nexport default LoadingWheel;","import ls from \"local-storage\";\r\n\r\nexport const baseCache = (key, input = undefined, exp = 30) => {\r\n  exp = exp * 1000;\r\n  const val = {\r\n    data: input,\r\n    expiry: Date.now() + exp,\r\n  };\r\n  if (input === undefined) {\r\n    const toReturn = ls(key);\r\n    if (toReturn === null) {\r\n      return null;\r\n    } else {\r\n      return toReturn.data;\r\n    }\r\n  } else {\r\n    return ls(key, val);\r\n  }\r\n};\r\n\r\nexport const suffixCache = (key, suffix, input = undefined, exp = 30) => {\r\n  key = `${key}-${suffix}`;\r\n  return baseCache(key, input, exp);\r\n};\r\n\r\nexport const baseAddToCache = (key, input) => {\r\n  let val = ls(key);\r\n  val ? (val = val.data) : (val = []);\r\n  input.forEach((newItem) => {\r\n    val = val.filter((oldItem) => {\r\n      if (oldItem.uuid === newItem.uuid) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    val.push(newItem);\r\n  });\r\n  return baseCache(key, val);\r\n};\r\n\r\nexport const clearCache = () => {\r\n  ls.clear();\r\n};\r\n\r\nexport const setCacheUpdating = (key, suffix = undefined) => {\r\n  if (suffix) {\r\n    key = `${key}-${suffix}`;\r\n  }\r\n  let val = ls(key);\r\n  if (val) {\r\n    val.updating = true;\r\n  } else {\r\n    val = { updating: true };\r\n  }\r\n\r\n  return ls(key, val);\r\n};\r\n\r\nexport const checkCacheUpdating = (key, suffix = undefined) => {\r\n  if (suffix) {\r\n    key = `${key}-${suffix}`;\r\n  }\r\n  const val = ls(key);\r\n  if (val) {\r\n    if (val.updating) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const checkCacheIsValid = (key, suffix = undefined) => {\r\n  if (suffix) {\r\n    key = `${key}-${suffix}`;\r\n  }\r\n  const val = ls(key);\r\n  try {\r\n    if (val === null || val.expiry < Date.now() || !val.data) {\r\n      return false;\r\n    }\r\n  } catch {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const setCacheExpired = (key, suffix = undefined) => {\r\n  if (suffix) {\r\n    key = `${key}-${suffix}`;\r\n  }\r\n  let val = ls(key);\r\n\r\n  if (val === null || val.expiry < Date.now()) {\r\n    return true;\r\n  }\r\n  val.expiry = 1;\r\n  return ls(key, val);\r\n};\r\n\r\nexport const checkForCacheUpdate = (\r\n  reRender,\r\n  key,\r\n  sufix = undefined,\r\n  delayMS = 250\r\n) => {\r\n  if (!checkCacheIsValid(key, sufix)) {\r\n    let interVal = setInterval(() => {\r\n      if (checkCacheIsValid(key, sufix)) {\r\n        reRender();\r\n        clearInterval(interVal);\r\n      }\r\n    }, delayMS);\r\n  }\r\n};\r\n\r\nexport const setCacheWhenUpdated = (\r\n  key,\r\n  setter,\r\n  sufix = undefined,\r\n  delayMS = 250\r\n) => {\r\n  let interVal = null;\r\n  if (!checkCacheIsValid(key, sufix)) {\r\n    interVal = setInterval(() => {\r\n      if (checkCacheIsValid(key, sufix)) {\r\n        setter(baseCache(key));\r\n        clearInterval(interVal);\r\n      }\r\n    }, delayMS);\r\n  } else {\r\n    clearInterval(interVal);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const tokenCache = (token = undefined) => {\r\n  return baseCache(\"userToken\", token);\r\n};\r\n\r\nexport const checkSignin = () => {\r\n  if (typeof tokenCache() === \"string\") {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const prefCache = (data = undefined) => {\r\n  return baseCache(\"prefData\", data, 3600);\r\n};\r\n","export const filterArrayByProperties = (arr, key, val) => {\r\n  try {\r\n    return arr.filter((item) => {\r\n      if (item[key] === val) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const filterArrayForUUID = (arr, uuid) => {\r\n  return filterArrayByProperties(arr, \"uuid\", uuid)[0];\r\n};\r\n\r\nexport const filterArrayForParentID = (arr, parentUUID) => {\r\n  return filterArrayByProperties(arr, \"parentID\", parentUUID);\r\n};\r\n","import { baseCache, suffixCache } from \"cache\";\r\nimport { filterArrayForUUID } from \"functions\";\r\n\r\nexport const groupCache = (data = undefined) => {\r\n  return baseCache(\"groupData\", data);\r\n};\r\n\r\nexport const groupByUUIDCache = (uuid) => {\r\n  let arr = baseCache(\"groupData\");\r\n  return filterArrayForUUID(arr, uuid);\r\n};\r\n\r\nexport const groupContentCache = (uuid, data = undefined) => {\r\n  return suffixCache(\"groupContent\", uuid, data);\r\n};\r\n","import Axios from \"axios\";\r\nimport { tokenCache } from \"../cache\";\r\n\r\nconst handleCallError = (err) => {\r\n  if (err.response) {\r\n    console.log(err.response);\r\n    return err.response;\r\n  } else if (err.request) {\r\n    console.log(err.request);\r\n    return err.request;\r\n  } else if (err.message) {\r\n    console.log(err.message);\r\n  }\r\n  return false;\r\n};\r\n\r\nconst BaseUrl = \"http://172.105.176.175\";\r\nconst PORTNo = 5000;\r\n\r\nexport const baseCall = async (url, method = \"get\", input = null) => {\r\n  console.log(`Base Call ${method} ${url}`);\r\n  try {\r\n    let res = await Axios({\r\n      method: method,\r\n      url: `${BaseUrl}:${PORTNo}/${url}`,\r\n      data: input,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n    // this stops an error message occuring in the console\r\n    // no idea why / how\r\n    return res;\r\n  } catch (err) {\r\n    return handleCallError(err);\r\n  }\r\n};\r\n\r\nexport const userCall = async (url, method = \"get\", input = null) => {\r\n  console.log(`User Call ${method} ${url}`);\r\n  try {\r\n    let res = await Axios({\r\n      method: method,\r\n      url: `${BaseUrl}:${PORTNo}/${url}`,\r\n      data: input,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"user-auth\": tokenCache(),\r\n      },\r\n    });\r\n    // this stops an error message occuring in the console\r\n    // no idea why / how\r\n    console.log(res);\r\n    return res;\r\n  } catch (err) {\r\n    console.log(\"ded\");\r\n    handleCallError(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const testCall = () => {\r\n  return baseCall(\"test\");\r\n};\r\n","import { userCall } from \"calls\";\r\n\r\n// get the usertoken from cache\r\n// get groups for user\r\nexport const myGroupsCall = async () => {\r\n  return await userCall(\"mygroups\");\r\n};\r\n\r\nexport const groupContentCall = async (uuid) => {\r\n  return await userCall(\"groups\", \"post\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// create group\r\nexport const groupAddCall = async (data) => {\r\n  return await userCall(\"addgroup\", \"post\", {\r\n    ...data,\r\n  });\r\n};\r\n\r\n// delete group\r\nexport const groupDeleteCall = async (uuid) => {\r\n  return await userCall(\"groups\", \"delete\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// edit group\r\nexport const groupEditCall = async (uuid, data) => {\r\n  return await userCall(\"groups\", \"patch\", {\r\n    uuid: uuid,\r\n    ...data,\r\n  });\r\n};\r\n","import { userCall } from \"calls\";\r\n\r\n// get the usertoken from cache\r\n// get groups for user\r\nexport const myInvitesCall = async () => {\r\n  return await userCall(\"myInvites\");\r\n};\r\n\r\nexport const inviteReplyCall = async (groupID, reply) => {\r\n  return await userCall(\"myinvites\", \"patch\", {\r\n    groupID: groupID,\r\n    reply: reply,\r\n  });\r\n};\r\n\r\nexport const groupInvitesCall = async (uuid) => {\r\n  return await userCall(\"ourinvites\", \"post\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// create group\r\n// export const groupAddCall = async (data) => {\r\n//   return await userCall(\"addgroup\", \"post\", {\r\n//     ...data,\r\n//   });\r\n// };\r\n\r\n// delete group\r\n// export const groupDeleteCall = async (uuid) => {\r\n//   return await userCall(\"groups\", \"delete\", {\r\n//     uuid: uuid,\r\n//   });\r\n// };\r\n\r\n// Reply Invites\r\n\r\nexport const sendInviteCall = async (groupID, userName, roleID) => {\r\n  return await userCall(\"invites\", \"post\", {\r\n    groupID,\r\n    userName,\r\n    roleID,\r\n  });\r\n};\r\n\r\nexport const deleteInviteCall = async (groupID, user) => {\r\n  return await userCall(\"invites\", \"delete\", {\r\n    groupID: groupID,\r\n    user: user,\r\n  });\r\n};\r\n","import { baseCall, userCall } from \"calls\";\r\n\r\nexport const loginCall = async (input) => {\r\n  return await baseCall(\"login\", \"post\", input);\r\n};\r\n\r\nexport const registerCall = async (input) => {\r\n  return await baseCall(\"register\", \"post\", input);\r\n};\r\n\r\n// get the usertoken from cache\r\n// get groups for user\r\nexport const myPrefCall = async () => {\r\n  return await userCall(\"mypref\");\r\n};\r\n\r\nexport const prefEditCall = async (data) => {\r\n  return await userCall(\"mypref\", \"patch\", data);\r\n};\r\n","import { validate as uuidValidate } from \"uuid\";\r\n\r\nexport const checkResponse = (res) => {\r\n  const status = res.status;\r\n  if (status <= 299) {\r\n    return true;\r\n  } else if (status === 204) {\r\n    return 204;\r\n  } else if (status === 401) {\r\n    return 401;\r\n  } else if (status === 400) {\r\n    return 400;\r\n  } else if (status <= 500) {\r\n    return 500;\r\n  }\r\n};\r\n\r\nexport const checkUUID = (input) => {\r\n  if (uuidValidate(input)) {\r\n    return input;\r\n  }\r\n  return false;\r\n};\r\n\r\n// checks that all the specified keys exist\r\nexport const checkInputHasKeys = (input, keys) => {\r\n  // check the object has some keys\r\n  if (!input || Object.keys(input).length === 0) {\r\n    return false;\r\n  }\r\n  keys.forEach((key) => {\r\n    if (input[key] === undefined) {\r\n      return false;\r\n    }\r\n  });\r\n  return true;\r\n};\r\n\r\n// creates a new object with only the specified keys\r\nexport const extractInputKeys = (input, keys) => {\r\n  if (!input || Object.keys(input).length === 0) {\r\n    return false;\r\n  }\r\n  let output = {};\r\n  keys.forEach((key) => {\r\n    if (input[key] !== undefined) {\r\n      output[key] = input[key];\r\n    }\r\n  });\r\n  return output;\r\n};\r\n\r\nexport const checkForChars = (str, pattern) => {\r\n  pattern = new RegExp(pattern);\r\n  const toReturn = pattern.test(str);\r\n  return toReturn;\r\n};\r\n","import { baseCache } from \"cache\";\r\n\r\nexport const inviteCache = (data = undefined) => {\r\n  return baseCache(\"inviteData\", data);\r\n};\r\n","import { prefCache, setCacheUpdating } from \"cache\";\r\nimport { groupCache, groupContentCache } from \"cache/groups\";\r\nimport { groupContentCall, myGroupsCall } from \"calls/groups\";\r\nimport { myInvitesCall } from \"calls/invites\";\r\nimport { myPrefCall } from \"calls/users\";\r\nimport { checkResponse } from \"validation\";\r\nimport { inviteCache } from \"cache/Invites\";\r\n\r\n// updates do....  update the cache after a call\r\n// Make Call\r\n// Check result\r\n// set cache\r\n// Return True / false\r\n\r\nconst baseUpdate = async (call, cache) => {\r\n  const callRes = await call();\r\n  if (checkResponse(callRes) <= 299) {\r\n    cache(callRes.data);\r\n    return true;\r\n  } else if (checkResponse(callRes > 299)) {\r\n    console.log(\"Failed\");\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const myGroupsUpdate = async () => {\r\n  return baseUpdate(myGroupsCall, groupCache);\r\n};\r\n\r\nexport const groupContentUpdate = async (groupID) => {\r\n  const groupContentRes = await groupContentCall(groupID);\r\n  if (checkResponse(groupContentRes) <= 299) {\r\n    groupContentCache(groupID, groupContentRes.data);\r\n    return true;\r\n  } else if (checkResponse(groupContentRes > 299)) {\r\n    console.log(\"Failed\");\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const myInvitesUpdate = () => {\r\n  return baseUpdate(myInvitesCall, inviteCache);\r\n};\r\n\r\nexport const myPrefUpdate = () => {\r\n  return baseUpdate(myPrefCall, prefCache);\r\n};\r\n","import { myGroupsUpdate, myPrefUpdate } from \"actions/updates\";\r\nimport { loginCall, prefEditCall, registerCall } from \"calls/users\";\r\nimport { checkResponse } from \"validation\";\r\nimport { checkCacheIsValid, clearCache, tokenCache } from \"../cache\";\r\n\r\nexport const signInAction = async (data) => {\r\n  // send to the API\r\n  const loginRes = await loginCall(data);\r\n  // check the result\r\n  if (checkResponse(loginRes) === true) {\r\n    const xAuth = loginRes.headers[\"x-auth\"];\r\n    // set the user token in localstorage\r\n    tokenCache(xAuth);\r\n    return true;\r\n  } else if (checkResponse(loginRes) > 200) {\r\n    console.log(\"failed Login\");\r\n    clearCache();\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const registerUser = async (data) => {\r\n  delete data.confirm;\r\n  const regRes = await registerCall(data);\r\n  // check the result\r\n  return checkResponse(regRes);\r\n};\r\n\r\nexport const getMyPrefs = async () => {\r\n  if (checkCacheIsValid(`prefData`)) {\r\n    return true;\r\n  }\r\n  return await myPrefUpdate();\r\n};\r\n\r\nexport const editPrefs = async (data) => {\r\n  return await prefEditCall(data);\r\n};\r\n","import { checkForChars, checkInputHasKeys, extractInputKeys } from \"./index.js\";\r\n\r\nexport const invalidAddUser = (input) => {\r\n  // validate name , password\r\n  let requiredKeys = [\"username\", \"password\", \"email\"];\r\n  let acceptedKeys = [\"username\", \"password\", \"email\"];\r\n  if (!checkInputHasKeys(input, requiredKeys)) {\r\n    return \"Enusre All Required Fields are Filled.\";\r\n  }\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!validUserName(input.username)) {\r\n    return \"User Names Must be at least 3 charectors\";\r\n  }\r\n  if (!validPassword(input.password)) {\r\n    return \"Passwords must have ... 1 uppercase, 1 lowercase, 1 number, and must be at least 8 charecters long\";\r\n  }\r\n  if (!validEmail(input.email)) {\r\n    return \"Please enter a valid emaail\";\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const invalidSignIn = (input) => {\r\n  console.log(input);\r\n  // validate name , password\r\n  let acceptedKeys = [\"username\", \"password\"];\r\n  if (input.username === \"\" || input.password === \"\") {\r\n    return \"Enusre All Required Fields are Filled.\";\r\n  }\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  // if (!validUserName(input.username)) {\r\n  //   return \"User Names Must be at least 3 charectors\";\r\n  // }\r\n  // if (!validPassword(input.password)) {\r\n  //   return \"Passwords must be at least 8 charecters long\";\r\n  // }\r\n  return false;\r\n};\r\n\r\nexport const invalidRegister = (input) => {\r\n  // validate name , password\r\n  let requiredKeys = [\"username\", \"password\", \"email\", \"confirm\"];\r\n  if (!checkInputHasKeys(input, requiredKeys)) {\r\n    return \"Enusre All Required Fields are Filled.\";\r\n  }\r\n  if (!validUserName(input.username)) {\r\n    return \"User Names Must be at least 3 charectors\";\r\n  }\r\n  if (!validEmail(input.email)) {\r\n    return \"Ensure email was entered correctly\";\r\n  }\r\n  if (!validPassword(input.password)) {\r\n    return \"Passwords must be at least 9 charecters long\";\r\n  }\r\n  if (input.password !== input.confirm) {\r\n    return \"Passwords do not match.\";\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const invalidEditUser = (input) => {\r\n  console.log(input);\r\n  let acceptedKeys = [\"username\", \"password\", \"email\", \"uuid\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (input.username && !validUserName(input.username)) {\r\n    return \"User Names Must be at least 3 charectors\";\r\n  }\r\n  if (input.password && !validPassword(input.password)) {\r\n    return \"Passwords must have ... 1 uppercase, 1 lowercase, 1 number, and must be at least 9 charecters long\";\r\n  }\r\n  if (input.email && !validEmail(input.email)) {\r\n    return \"Please enter a valid emaail\";\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validUserName = (name) => {\r\n  if (\r\n    name.length > 62 ||\r\n    name.length < 3 ||\r\n    checkForChars(name, `;|\\`|\\n|\\r`)\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst validEmail = (name) => {\r\n  if (\r\n    name.length > 63 ||\r\n    name.length < 4 ||\r\n    // thanks stack overflow\r\n    !checkForChars(name, \"(.+)@(.+){2,}.(.+){2,}\")\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst validPassword = (password) => {\r\n  if (\r\n    password.length > 63 ||\r\n    password.length <= 8 ||\r\n    // (?=.*[a-z])\tThe string must contain at least 1 lowercase alphabetical character\r\n    // (?=.*[A-Z])\tThe string must contain at least 1 uppercase alphabetical character\r\n    // (?=.*[0-9])\tThe string must contain at least 1 numeric character\r\n    !checkForChars(password, \"((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))\")\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import {\r\n  Button,\r\n  // Divider,\r\n  // InputLabel,\r\n  makeStyles,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { React, useState } from \"react\";\r\nimport { GreenRed } from \"../../themes/themes\";\r\nimport Colors from \"../../themes/colors\";\r\nimport ImageBox from \"../index/ImageBox\";\r\nimport { signInAction } from \"../../actions/users.js\";\r\nimport { checkSignin } from \"cache\";\r\nimport { invalidSignIn } from \"validation/users\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    paddingBottom: \"10%\",\r\n    height: \"100%\",\r\n    minHeight: \"100vh\",\r\n    background: `${Colors.bg}`,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \" 0 10%\",\r\n  },\r\n  input: {\r\n    margin: \"10px\",\r\n    width: \"100%\",\r\n    background: \"#f3f3f3\",\r\n    border: \"2px solid #e3e3e3\",\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  btn: {\r\n    margin: 10,\r\n    width: \"80%\",\r\n  },\r\n  label: {\r\n    marginLeft: 15,\r\n    textAlign: \"left\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    fontSize: \"1.8rem\",\r\n    textAlign: \"center\",\r\n    margin: \"15px auto 50px\",\r\n  },\r\n  flashMsg: {\r\n    padding: 10,\r\n    background: \"#ff442266\",\r\n    borders: \"1px solid red\",\r\n    borderRadius: 8,\r\n    margin: 5,\r\n    width: \"80%\",\r\n  },\r\n});\r\n\r\nfunction LoginPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const [usernameState, setUsernameState] = useState(\"\");\r\n  const [passwordState, setPasswordState] = useState(\"\");\r\n  const [ValidState, setValidState] = useState(\"\");\r\n\r\n  const userNameChanged = (e) => {\r\n    setUsernameState(e.target.value);\r\n  };\r\n\r\n  const passwordChanged = (e) => {\r\n    setPasswordState(e.target.value);\r\n  };\r\n\r\n  // set the screen to loading\r\n  // once signed in redirect\r\n  const loginClicked = async (e) => {\r\n    const input = { username: usernameState, password: passwordState };\r\n    const invalidMsg = invalidSignIn(input);\r\n    if (invalidMsg) {\r\n      setValidState(invalidMsg);\r\n      return;\r\n    }\r\n    props.loginControls.setState(\"loading\");\r\n    await signInAction(input);\r\n    if (checkSignin()) {\r\n      setValidState(\"\");\r\n      props.appControls.setState(\"main\");\r\n    } else {\r\n      setValidState(\"Sign in failed, Check username and password.\");\r\n      props.loginControls.setState(\"login\");\r\n    }\r\n  };\r\n\r\n  // swap to register\r\n  const registerClicked = (e) => {\r\n    // props.loginControls.appState(\"register\");\r\n    props.loginControls.setState(\"register\");\r\n  };\r\n\r\n  let flashMsg = \"\";\r\n  if (ValidState) {\r\n    flashMsg = (\r\n      <Typography variant=\"p\" component=\"p\" className={classes.flashMsg}>\r\n        {ValidState}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageBox img={\"./img/logo.svg\"} height={150} />\r\n      <Typography variant=\"h4\" component=\"h1\" className={classes.header}>\r\n        Login\r\n      </Typography>\r\n      {flashMsg}\r\n      <div className={classes.form}>\r\n        <Typography className={classes.label} variant=\"subtitle2\" component=\"p\">\r\n          Username\r\n        </Typography>\r\n        <TextField className={classes.input} onChange={userNameChanged} />\r\n        <Typography className={classes.label} variant=\"subtitle2\" component=\"p\">\r\n          Password\r\n        </Typography>\r\n        <TextField\r\n          type=\"password\"\r\n          className={classes.input}\r\n          onChange={passwordChanged}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={loginClicked}\r\n          className={classes.btn}\r\n        >\r\n          Log In\r\n        </Button>\r\n        <ThemeProvider theme={GreenRed}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={registerClicked}\r\n            className={classes.btn}\r\n          >\r\n            Register\r\n          </Button>\r\n        </ThemeProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  // Divider,\r\n  // InputLabel,\r\n  makeStyles,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { React, useState } from \"react\";\r\nimport { GreenRed } from \"../../themes/themes\";\r\nimport Colors from \"../../themes/colors\";\r\nimport ImageBox from \"../index/ImageBox\";\r\nimport { registerUser, signInAction } from \"../../actions/users.js\";\r\nimport { checkSignin } from \"cache\";\r\nimport { invalidRegister } from \"validation/users\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    paddingBottom: \"10%\",\r\n    height: \"100%\",\r\n    minHeight: \"100vh\",\r\n    background: `${Colors.bg}`,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop: 20,\r\n  },\r\n  form: {\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \" 0 10%\",\r\n  },\r\n  input: {\r\n    margin: \"10px\",\r\n    width: \"100%\",\r\n    background: \"#f3f3f3\",\r\n    border: \"2px solid #e3e3e3\",\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  btn: {\r\n    margin: 10,\r\n    width: \"80%\",\r\n  },\r\n  label: {\r\n    marginLeft: 15,\r\n    textAlign: \"left\",\r\n    width: \"100%\",\r\n  },\r\n  agreement: {\r\n    fontSize: \"0.8rem\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    fontSize: \"1.8rem\",\r\n    textAlign: \"center\",\r\n    margin: \"15px auto 50px\",\r\n  },\r\n  flashMsg: {\r\n    padding: 10,\r\n    background: \"#ff442266\",\r\n    borders: \"1px solid red\",\r\n    borderRadius: 8,\r\n    margin: 5,\r\n    width: \"80%\",\r\n  },\r\n});\r\n\r\nfunction RegisterPage(props) {\r\n  const classes = useStyles();\r\n\r\n  const [usernameState, setUsernameState] = useState(\"\");\r\n  const [passwordState, setPasswordState] = useState(\"\");\r\n  const [confirmState, setConfirmState] = useState(\"\");\r\n  const [emailState, setEmailState] = useState(\"\");\r\n  const [ValidState, setValidState] = useState(\"\");\r\n\r\n  const userNameChanged = (e) => {\r\n    setUsernameState(e.target.value);\r\n  };\r\n\r\n  const passwordChanged = (e) => {\r\n    setPasswordState(e.target.value);\r\n  };\r\n\r\n  const confirmChanged = (e) => {\r\n    setConfirmState(e.target.value);\r\n  };\r\n\r\n  const emailChanged = (e) => {\r\n    setEmailState(e.target.value);\r\n  };\r\n\r\n  // set the screen to loading\r\n  // once signed in redirect\r\n  const registerClicked = async (e) => {\r\n    const input = {\r\n      username: usernameState,\r\n      password: passwordState,\r\n      confirm: confirmState,\r\n      email: emailState,\r\n    };\r\n    const invalidMsg = invalidRegister(input);\r\n    if (invalidMsg) {\r\n      setValidState(invalidMsg);\r\n      return;\r\n    }\r\n    props.loginControls.setState(\"loading\");\r\n    const itWorked = await registerUser(input);\r\n    if (itWorked) {\r\n      setValidState(\"\");\r\n      props.appControls.setState(\"login\");\r\n      props.loginControls.setState(\"login\");\r\n    } else {\r\n      setValidState(\"Register Failed, Username may be taken.\");\r\n      props.loginControls.setState(\"register\");\r\n    }\r\n  };\r\n\r\n  const loginClicked = (e) => {\r\n    // props.loginControls.appState(\"register\");\r\n    props.loginControls.setState();\r\n  };\r\n\r\n  let flashMsg = \"\";\r\n  if (ValidState) {\r\n    flashMsg = (\r\n      <Typography variant=\"p\" component=\"p\" className={classes.flashMsg}>\r\n        {ValidState}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageBox img={\"./img/logo.svg\"} height={150} />\r\n      <Typography variant=\"h4\" component=\"h1\" className={classes.header}>\r\n        Register\r\n      </Typography>\r\n      {flashMsg}\r\n      <div className={classes.form}>\r\n        <Typography className={classes.label} variant=\"subtitle1\" component=\"p\">\r\n          Username\r\n        </Typography>\r\n        <TextField onChange={userNameChanged} className={classes.input} />\r\n        <Typography className={classes.label} variant=\"subtitle1\" component=\"p\">\r\n          Email\r\n        </Typography>\r\n        <TextField onChange={emailChanged} className={classes.input} />\r\n        <Typography className={classes.label} variant=\"subtitle1\" component=\"p\">\r\n          Password\r\n        </Typography>\r\n        <TextField\r\n          type=\"password\"\r\n          onChange={passwordChanged}\r\n          className={classes.input}\r\n        />\r\n        <Typography className={classes.label} variant=\"subtitle1\" component=\"p\">\r\n          Confirm Password\r\n        </Typography>\r\n        <TextField\r\n          type=\"password\"\r\n          onChange={confirmChanged}\r\n          className={classes.input}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs={9}>\r\n            <Typography className={classes.agreement} variant=\"p\" component=\"p\">\r\n              I agree to the Projecta UELA\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Checkbox color=\"primary\" />\r\n          </Grid>\r\n        </Grid>\r\n        <ThemeProvider theme={GreenRed}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={registerClicked}\r\n            color=\"primary\"\r\n            className={classes.btn}\r\n          >\r\n            Register\r\n          </Button>\r\n        </ThemeProvider>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={loginClicked}\r\n          className={classes.btn}\r\n        >\r\n          Go To Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import LoadingWheel from \"components/index/LoadingWheel\";\r\nimport React, { useState } from \"react\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport RegisterPage from \"./RegisterPage\";\r\n\r\nconst LoginHome = (props) => {\r\n  const [loginState, setLoginState] = useState(\"login\");\r\n\r\n  const loginControls = {\r\n    setState: (input = \"login\") => {\r\n      setLoginState(input);\r\n    },\r\n  };\r\n\r\n  let loginContent = <LoadingWheel logo={true} />;\r\n  if (loginState === \"login\") {\r\n    loginContent = (\r\n      <LoginPage\r\n        loginControls={loginControls}\r\n        appControls={props.appControls}\r\n      />\r\n    );\r\n  } else if (loginState === \"register\") {\r\n    loginContent = (\r\n      <RegisterPage\r\n        loginControls={loginControls}\r\n        appControls={props.appControls}\r\n      />\r\n    );\r\n  }\r\n  return <div>{loginContent}</div>;\r\n};\r\n\r\nexport default LoginHome;\r\n","import { checkCacheIsValid } from \"cache\";\r\nimport { myInvitesUpdate } from \"actions/updates\";\r\nimport {\r\n  deleteInviteCall,\r\n  groupInvitesCall,\r\n  inviteReplyCall,\r\n  sendInviteCall,\r\n} from \"calls/invites\";\r\n\r\nexport const getMyInvites = async () => {\r\n  if (checkCacheIsValid(`inviteData`)) {\r\n    return true;\r\n  }\r\n  return await myInvitesUpdate();\r\n};\r\n\r\nexport const getGroupInvites = async (group) => {\r\n  return await groupInvitesCall(group);\r\n};\r\n\r\nexport const replyToInvite = async (group, reply) => {\r\n  return await inviteReplyCall(group, reply);\r\n};\r\n\r\nexport const sendInvite = async (group, data) => {\r\n  return await sendInviteCall(group, data.userName, data.roleID);\r\n};\r\n\r\nexport const deleteInvite = async (group, user) => {\r\n  return await deleteInviteCall(group, user);\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Divider,\r\n  makeStyles,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { GreenRed, MainTheme } from \"themes/themes\";\r\nimport { setCacheExpired } from \"cache\";\r\nimport { sendInvite } from \"actions/invites\";\r\n\r\nconst InviteList = (props) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      background: props.modalTheme.palette.background.paper,\r\n      color: props.modalTheme.palette.text.primary,\r\n      position: \"absolute\",\r\n      left: \"10%\",\r\n      top: \"15%\",\r\n      width: \"80%\",\r\n      padding: \"12px 16px\",\r\n      borderRadius: 10,\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    divider: {\r\n      margin: 10,\r\n    },\r\n    buttonGroup: {\r\n      float: \"right\",\r\n      margin: \"5px 5px 5px auto\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const addClicked = () => {\r\n    props.modalControls.setState(true, \"form\", {\r\n      title: \"Invite User\",\r\n      subtitle: `Invite a user`,\r\n      inputs: [\r\n        {\r\n          name: \"userName\",\r\n          label: \"User Name\",\r\n        },\r\n        {\r\n          name: \"roleID\",\r\n          label: \"Proposed Role\",\r\n        },\r\n      ],\r\n      submit: async (data) => {\r\n        const itWorked = await sendInvite(props.listData.group, data);\r\n\r\n        console.log(itWorked);\r\n        // if (itWorked) {\r\n        //   setCacheExpired(\"groupData\");\r\n        //   props.modalControls.setState();\r\n        // }\r\n      },\r\n    });\r\n  };\r\n\r\n  const clearClicked = () => {\r\n    props.modalControls.setState();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={GreenRed}>\r\n        <Typography variant=\"subtitle1\">{props.listData.head}</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          rounded\r\n          onClick={addClicked}\r\n        >\r\n          Invite New Member\r\n        </Button>\r\n        {/* <Typography variant=\"caption\">{props.listData.subtitle}</Typography> */}\r\n        <Divider className={classes.divider} />\r\n        <Button\r\n          color=\"secondary\"\r\n          rounded\r\n          variant=\"contained\"\r\n          variant=\"outlined\"\r\n          onClick={clearClicked}\r\n        >\r\n          Close\r\n        </Button>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InviteList;\r\n","import { Button, ButtonGroup, Divider } from \"@material-ui/core\";\r\nimport { prefCache } from \"cache\";\r\nimport React from \"react\";\r\n\r\nexport const ActiveMenu = (props) => {\r\n  const test1Clicked = async () => {\r\n    let toLog = \"test 1\";\r\n    // toLog = await projectGetCall(\"ef657a40-be12-4444-b13d-b5aaf5bbcd14\");\r\n    toLog = prefCache();\r\n    console.log(toLog);\r\n  };\r\n\r\n  const test2Clicked = async () => {\r\n    let toLog = \"test 2\";\r\n    console.log(toLog);\r\n  };\r\n\r\n  const test3Clicked = async () => {\r\n    let toLog = \"test 3\";\r\n    console.log(toLog);\r\n  };\r\n\r\n  const test4Clicked = async () => {\r\n    let toLog = \"test 4\";\r\n    console.log(toLog);\r\n  };\r\n\r\n  const test5Clicked = async () => {\r\n    let toLog = \"test 5\";\r\n    console.log(toLog);\r\n  };\r\n\r\n  const test6Clicked = async () => {\r\n    let toLog = \"test 6\";\r\n    console.log(toLog);\r\n  };\r\n\r\n  const test7Clicked = async () => {\r\n    let toLog = \"test 7\";\r\n    console.log(toLog);\r\n  };\r\n\r\n  let activeMenuButtons = [\r\n    {\r\n      label: \"Test 1\",\r\n      action: test1Clicked,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ButtonGroup className={props.classes.group}>\r\n      <Divider className={props.classes.divider} variant=\"fullWidth\" />\r\n      {activeMenuButtons.map((btn) => {\r\n        return (\r\n          <Button\r\n            key={btn.label}\r\n            className={props.classes.btn}\r\n            color=\"primary\"\r\n            onClick={btn.action}\r\n          >\r\n            {btn.label}\r\n          </Button>\r\n        );\r\n      })}\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default ActiveMenu;\r\n","import React from \"react\";\r\nimport ls from \"local-storage\";\r\nimport { Button, ButtonGroup, Divider, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { baseCache, clearCache, tokenCache } from \"cache\";\r\nimport ActiveMenu from \"./ActiveMenu\";\r\nimport { testCall } from \"calls\";\r\nconst Menu = (props) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      position: \"absolute\",\r\n      left: \"10%\",\r\n      top: \"25%\",\r\n      width: \"80%\",\r\n      padding: \"12px 16px\",\r\n      borderRadius: 10,\r\n      background: props.modalTheme.palette.background.default,\r\n    },\r\n    group: {\r\n      padding: 10,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    btn: { margin: 5 },\r\n    divider: {\r\n      margin: 10,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const logOutClicked = () => {\r\n    props.appControls.setState(\"login\");\r\n    clearCache();\r\n    props.modalControls.setState();\r\n  };\r\n\r\n  const clearCacheClicked = () => {\r\n    props.appControls.setState(\"loading\");\r\n    const tokenData = tokenCache();\r\n    clearCache();\r\n    tokenCache(tokenData);\r\n    console.clear();\r\n    props.appControls.setState(\"main\");\r\n  };\r\n\r\n  const clearGroupCacheClicked = () => {\r\n    console.log(baseCache(\"groupData\"));\r\n    console.log(\"clearing\");\r\n    ls(\"groupData\", null);\r\n  };\r\n\r\n  const refreshClicked = async () => {\r\n    testCall();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ActiveMenu classes={classes} />\r\n      <Divider className={classes.divider} />\r\n      <ButtonGroup className={classes.group} color=\"default\" variant=\"outlined\">\r\n        <Button\r\n          className={classes.btn}\r\n          color=\"secondary\"\r\n          onClick={refreshClicked}\r\n        >\r\n          Clear Terminal\r\n        </Button>\r\n        <Button\r\n          className={classes.btn}\r\n          color=\"info\"\r\n          onClick={clearCacheClicked}\r\n        >\r\n          Clear Cache\r\n        </Button>\r\n        <Button\r\n          className={classes.btn}\r\n          color=\"info\"\r\n          onClick={clearGroupCacheClicked}\r\n        >\r\n          Clear Group Cache\r\n        </Button>\r\n        <Button className={classes.btn} color=\"error\" onClick={logOutClicked}>\r\n          Log out\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\n\r\nimport { Checkbox, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    width: \"90%\",\r\n  },\r\n  inputDiv: {\r\n    width: \"100%\",\r\n    margin: 10,\r\n  },\r\n  label: {\r\n    width: \"80%\",\r\n  },\r\n  required: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst FormInputs = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const inputChanged = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    props.formInputControls.updateInputs(name, value);\r\n  };\r\n\r\n  const checkBoxChecked = (e) => {\r\n    const checked = e.target.checked;\r\n    const name = e.target.name;\r\n    props.formInputControls.updateInputs(name, checked);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.inputs.map((input) => {\r\n        let requiredHTML = \"\";\r\n        let prefillText = \"\";\r\n        if (input.prefill !== undefined) {\r\n          prefillText = input.prefill;\r\n        }\r\n        if (input.required) {\r\n          requiredHTML = <span className={classes.required}>*</span>;\r\n        }\r\n        let inputHTML = (\r\n          <TextField\r\n            defaultValue={prefillText}\r\n            name={input.name}\r\n            onChange={inputChanged}\r\n            className={classes.input}\r\n          />\r\n        );\r\n        if (input.type === \"checkBox\") {\r\n          if (input.startChecked) {\r\n            if (props.formInputControls.checkTrue(input.name)) {\r\n              props.formInputControls.updateInputs(input.name, true);\r\n            }\r\n            inputHTML = (\r\n              <Checkbox\r\n                defaultChecked\r\n                name={input.name}\r\n                onChange={checkBoxChecked}\r\n              />\r\n            );\r\n          } else {\r\n            inputHTML = (\r\n              <Checkbox name={input.name} onChange={checkBoxChecked} />\r\n            );\r\n          }\r\n        }\r\n        return (\r\n          <div key={input.name} className={classes.inputDiv}>\r\n            <Typography variant=\"subtitle2\" className={classes.label}>\r\n              {input.label}\r\n              {requiredHTML}\r\n            </Typography>\r\n            {inputHTML}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInputs;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Divider,\r\n  makeStyles,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport Colors from \"../../../themes/colors\";\r\nimport FormInputs from \"./FormInputs\";\r\nimport { GreenRed, MainTheme } from \"themes/themes\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    left: \"10%\",\r\n    top: \"15%\",\r\n    background: `${Colors.li}`,\r\n    color: `${Colors.dk}`,\r\n    width: \"80%\",\r\n    padding: \"12px 16px\",\r\n    borderRadius: 10,\r\n  },\r\n  divider: {\r\n    margin: 10,\r\n  },\r\n  buttonGroup: {\r\n    float: \"right\",\r\n    margin: \"5px 5px 5px auto\",\r\n  },\r\n  alert: {\r\n    display: \"block\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: 2,\r\n    padding: 5,\r\n    width: \"100%\",\r\n    background: \"rgba(231, 30, 16, 0.2)\",\r\n    border: \"2px solid rgba(231, 30, 16, 0.3)\",\r\n  },\r\n});\r\n\r\nconst Form = (props) => {\r\n  const classes = useStyles();\r\n  const [formInputState, setFormInputState] = useState({});\r\n\r\n  const [ValidationState, SetValidationState] = useState(\"\");\r\n\r\n  const setValidationState = (msg) => {\r\n    SetValidationState(msg);\r\n  };\r\n\r\n  let flashMsg = \"\";\r\n  if (ValidationState !== \"\") {\r\n    flashMsg = <p className={classes.alert}>{ValidationState}</p>;\r\n  }\r\n\r\n  const formInputControls = {\r\n    curState: formInputState,\r\n    setState: (data) => {\r\n      setFormInputState(data);\r\n    },\r\n    updateInputs: (inputName, string) => {\r\n      let oldState = formInputState;\r\n      oldState[inputName] = string;\r\n      setFormInputState({ ...oldState });\r\n    },\r\n    clearInputs: () => {\r\n      setFormInputState({});\r\n    },\r\n    checkTrue: (name) => {\r\n      return formInputState[name];\r\n    },\r\n  };\r\n\r\n  const submitClicked = () => {\r\n    console.log(props.formData);\r\n    const invalidMsg = props.formData.checkValid(formInputState);\r\n    if (invalidMsg) {\r\n      setValidationState(invalidMsg);\r\n    } else {\r\n      props.formData.submit(formInputState);\r\n    }\r\n  };\r\n\r\n  const clearClicked = () => {\r\n    formInputControls.clearInputs();\r\n    props.modalControls.setState();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle1\">{props.formData.title}</Typography>\r\n      <Typography variant=\"caption\">{props.formData.subtitle}</Typography>\r\n      {flashMsg}\r\n      <Divider className={classes.divider} />\r\n      <FormInputs\r\n        inputs={props.formData.inputs}\r\n        formInputControls={formInputControls}\r\n      />\r\n      <Divider className={classes.divider} />\r\n      <ThemeProvider theme={GreenRed}>\r\n        <ButtonGroup\r\n          rounded\r\n          variant=\"contained\"\r\n          className={classes.buttonGroup}\r\n        >\r\n          <Button color=\"secondary\" variant=\"outlined\" onClick={clearClicked}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={submitClicked}>\r\n            Submit\r\n          </Button>\r\n        </ButtonGroup>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","// Copied from the material ui docs and modified\r\nimport React from \"react\";\r\n\r\nimport { Modal as MuiModal, ThemeProvider } from \"@material-ui/core\";\r\n\r\nimport ModalList from \"./list/InviteList\";\r\nimport Menu from \"./Menu\";\r\nimport Form from \"./form/Form\";\r\n\r\nconst Modal = (props) => {\r\n  let content = (\r\n    <Menu\r\n      appControls={props.appControls}\r\n      modalControls={props.modalControls}\r\n      modalTheme={props.modalTheme}\r\n    />\r\n  );\r\n\r\n  if (props.modalControls.curState[1] === \"form\") {\r\n    content = (\r\n      <Form\r\n        formData={props.modalControls.curState[2]}\r\n        modalControls={props.modalControls}\r\n        modalTheme={props.modalTheme}\r\n      />\r\n    );\r\n  } else if (props.modalControls.curState[1] === \"list\") {\r\n    content = (\r\n      <ModalList\r\n        listData={props.modalControls.curState[2]}\r\n        modalControls={props.modalControls}\r\n        modalTheme={props.modalTheme}\r\n      />\r\n    );\r\n  }\r\n  const setClose = () => {\r\n    props.modalControls.setState();\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={props.modalTheme}>\r\n      <div>\r\n        <MuiModal\r\n          open={props.modalControls.curState[0]}\r\n          onClose={setClose}\r\n          // aria-labelledby=\"Settings Modal\"\r\n          // aria-describedby=\"Provides a Menu\"\r\n        >\r\n          {content}\r\n        </MuiModal>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nModal.defaultProps = {};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\nimport {\r\n  ChatBubble,\r\n  PlaylistAddCheck,\r\n  Person,\r\n  CalendarToday,\r\n} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 48,\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n  btn: {\r\n    width: \"25%\",\r\n    flex: 1,\r\n    minWidth: 30,\r\n    maxWidth: 200,\r\n  },\r\n});\r\n\r\n// get the feedcontroller and modal controller from the app\r\n// set the onchange toe handle the change of state\r\n\r\nexport default function BottomNAv(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    props.bodyControls.setState(newValue);\r\n  };\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={props.bodyState}\r\n      onChange={handleChange}\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        label=\"Feed\"\r\n        value=\"feed\"\r\n        icon={<PlaylistAddCheck />}\r\n        className={classes.btn}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Notes\"\r\n        value=\"notes\"\r\n        icon={<ChatBubble />}\r\n        className={classes.btn}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Calendar\"\r\n        value=\"calendar\"\r\n        icon={<CalendarToday />}\r\n        className={classes.btn}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Account\"\r\n        value=\"account\"\r\n        icon={<Person />}\r\n        className={classes.btn}\r\n      />\r\n      ;\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import {\r\n  AppBar,\r\n  Grid,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Menu, ArrowBack, Search } from \"@material-ui/icons\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// import BackBtn from \"../../../components/BackBtn\";\r\n// import SearchBtn from \"../../../components/SearchBtn\";\r\n\r\n// only mount the button for the modal not the modal itself\r\n// position static, sets it as a regular dom element\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"fit-content\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  left: {\r\n    height: \"fit-content\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const [searchState, setsearchState] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const openModel = () => {\r\n    props.modalControls.openMenu();\r\n  };\r\n\r\n  const goBackInFeed = () => {\r\n    props.feedControls.goBack();\r\n  };\r\n\r\n  let leftButton = (\r\n    <IconButton onClick={openModel}>\r\n      <Menu />\r\n    </IconButton>\r\n  );\r\n  let pageIndicator = \"Home\";\r\n  if (props.bodyControls.curState === \"account\") {\r\n    pageIndicator = \"Account\";\r\n  } else if (props.bodyControls.curState === \"calendar\") {\r\n    pageIndicator = \"Calendar\";\r\n  } else if (props.feedControls.curState !== \"groups\") {\r\n    leftButton = (\r\n      <IconButton onClick={goBackInFeed}>\r\n        <ArrowBack />\r\n      </IconButton>\r\n    );\r\n  }\r\n  if (props.feedControls.curState === \"projects\") {\r\n    pageIndicator = \"Group\";\r\n  } else if (props.feedControls.curState === \"tasks\") {\r\n    pageIndicator = \"Project\";\r\n  }\r\n  return (\r\n    <AppBar\r\n      color=\"primary\"\r\n      position=\"static\"\r\n      className={classes.root}\r\n      position=\"fixed\"\r\n    >\r\n      <div className={classes.left}>\r\n        {leftButton}\r\n        <Typography className={classes.text} variant=\"subtitle2\">\r\n          {pageIndicator}\r\n        </Typography>\r\n      </div>\r\n      {\r\n        <IconButton>\r\n          <Search />\r\n        </IconButton>\r\n      }\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Divider, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport ImageBox from \"../index/ImageBox\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  }\r\n});\r\n\r\nfunction ProfileHead() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.heading} component=\"h5\" variant=\"h5\">\r\n        This User\r\n      </Typography>\r\n      <ImageBox height={120} img={\"img/usr/default.png\"} />\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileHead;\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport { ToggleOff, ToggleOn } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nexport const Toggler = (props) => {\r\n  const toggleClicked = () => {\r\n    props.whenChanged();\r\n  };\r\n\r\n  let icon = <ToggleOff />;\r\n  if (props.onNow) {\r\n    <ToggleOn />;\r\n  }\r\n\r\n  return <IconButton onClick={toggleClicked}>{icon}</IconButton>;\r\n};\r\n\r\nexport default Toggler;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Toggler from \"components/index/Toggler\";\r\nimport { editPrefs, getMyPrefs } from \"actions/users\";\r\nimport {\r\n  checkForCacheUpdate,\r\n  clearCache,\r\n  prefCache,\r\n  setCacheExpired,\r\n} from \"cache\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n});\r\n\r\nfunction ProfileOptions(props) {\r\n  getMyPrefs();\r\n  checkForCacheUpdate(() => {}, \"prefData\");\r\n  const classes = useStyles();\r\n  const optionChanged = (e) => {\r\n    console.log(e);\r\n  };\r\n  const DarkModeToggle = async () => {\r\n    setCacheExpired(\"prefData\");\r\n    await editPrefs({ darkMode: !userPrefs.darkMode });\r\n    // janky just refresh page because the state isnt working quite as internded\r\n  };\r\n\r\n  const userPrefs = prefCache();\r\n  let options = [];\r\n  if (userPrefs) {\r\n    options = [\r\n      {\r\n        name: \"Dark Mode\",\r\n        type: \"switch\",\r\n        value: userPrefs.darkMode,\r\n        action: DarkModeToggle,\r\n      },\r\n      {\r\n        name: \"Font Size\",\r\n        type: \"select\",\r\n        action: optionChanged,\r\n      },\r\n    ];\r\n  }\r\n  let outPut = (\r\n    <div>\r\n      {options.map((item) => {\r\n        let button = <Toggler onNow={item.value} whenChanged={item.action} />;\r\n        if (item.type === \"select\") {\r\n          button = <p>Coming Soon</p>;\r\n        }\r\n        return (\r\n          <div key={item.name}>\r\n            <p>{item.name}</p>\r\n            {button}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  return <div>{outPut}</div>;\r\n}\r\n\r\nexport default ProfileOptions;\r\n","import React from \"react\";\r\nimport ProfileHead from \"./ProfileHead\";\r\nimport ProfileOptions from \"./ProfileOptions\";\r\n\r\nconst ProfileHome = () => {\r\n  return (\r\n    <div>\r\n      <ProfileHead />\r\n      <ProfileOptions />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHome;\r\n","import React from \"react\";\r\n\r\nfunction CalendarHome() {\r\n  return (\r\n    <div>\r\n      <h1>Calendar Here Soon</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarHome;\r\n","import React from \"react\";\r\n\r\nfunction NotesHome() {\r\n  return (\r\n    <div>\r\n      <h1>Notes Here Soon</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotesHome;\r\n","import { checkCacheIsValid, checkCacheUpdating, setCacheUpdating } from \"cache\";\r\nimport { groupContentUpdate, myGroupsUpdate } from \"actions/updates\";\r\nimport { groupAddCall, groupDeleteCall, groupEditCall } from \"calls/groups\";\r\n\r\n// check if data is good\r\n//\r\nexport const getMyGroups = async () => {\r\n  if (checkCacheIsValid(`groupData`) || checkCacheUpdating(\"groupData\")) {\r\n    return true;\r\n  }\r\n  setCacheUpdating(\"groupData\");\r\n  return await myGroupsUpdate();\r\n};\r\n\r\nexport const getContentForGroup = async (groupID) => {\r\n  if (checkCacheIsValid(`groupContent`, groupID)) {\r\n    return true;\r\n  }\r\n  groupContentUpdate(groupID);\r\n};\r\n\r\nexport const addNewGroup = async (data) => {\r\n  const choices = 4;\r\n  const rand = Math.floor(Math.random() * choices) + 1;\r\n  const imgLink = `default-${rand}.png`;\r\n  data = { ...data, imgLink };\r\n  console.log(data);\r\n  return await groupAddCall(data);\r\n};\r\n\r\nexport const deleteGroup = async (uuid) => {\r\n  return await groupDeleteCall(uuid);\r\n};\r\n\r\nexport const editGroup = async (uuid, data) => {\r\n  return await groupEditCall(uuid, data);\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { CardActionArea, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImageBox from \"components/index/ImageBox\";\r\nimport { getContentForGroup } from \"actions/groups\";\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    margin: \"0 5px\",\r\n    padding: 5,\r\n    textAlign: \"left\",\r\n  },\r\n  linkArea: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    width: \"50%\",\r\n  },\r\n});\r\n\r\nfunction GroupCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const linkClicked = async () => {\r\n    props.feedControls.setStateProjects(props.cardData.uuid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardActionArea\r\n        className={(classes.body, classes.fullWidth)}\r\n        component=\"button\"\r\n        onClick={linkClicked}\r\n      >\r\n        <Grid container className={classes.body}>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h5\">\r\n              {props.cardData.groupName}\r\n            </Typography>\r\n            <Typography varient=\"p\" component=\"p\">\r\n              \"{props.cardData.pinnedMessage}\"\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <ImageBox img={`/img/gr/${props.cardData.imgLink}`} height={100} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n      {/* <CardActions className={classes.linkArea}>\r\n        <ButtonGroup variant=\"contained\" className={classes.fullWidth}>\r\n          <Button className={classes.link} size=\"small\" color=\"primary\">\r\n            Members\r\n          </Button>\r\n          <Button className={classes.link} size=\"small\" color=\"secondary\">\r\n            Info\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardActions> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nGroupCard.defaultProps = {\r\n  edit: false,\r\n};\r\nexport default GroupCard;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { CardActionArea, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImageBox from \"components/index/ImageBox\";\r\nimport { groupDataCall } from \"calls\";\r\nimport { addTaskCache } from \"cache\";\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 5,\r\n    textAlign: \"left\",\r\n  },\r\n  linkArea: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    width: \"50%\",\r\n  },\r\n});\r\n\r\nfunction ProjectCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const linkClicked = async () => {\r\n    // props.feedControls.setState(\"tasks\", props.projectData.uuid);\r\n    props.feedControls.setStateTasks(props.cardData.uuid);\r\n    // await getContentForGroup(props.cardData.uuid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardActionArea\r\n        className={(classes.body, classes.fullWidth)}\r\n        component=\"button\"\r\n        onClick={linkClicked}\r\n      >\r\n        <Grid container className={classes.body}>\r\n          <Grid item xs={3}>\r\n            <ImageBox img={`/img/pr/${props.cardData.imgLink}`} width=\"100%\" />\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h4\">\r\n              {props.cardData.projectName}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography varient=\"asd\" component=\"p\">\r\n              \"Hello\"\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n      {/* <CardActions className={classes.linkArea}>\r\n        <ButtonGroup variant=\"contained\" className={classes.fullWidth}>\r\n          <Button className={classes.link} size=\"small\" color=\"primary\">\r\n            Members\r\n          </Button>\r\n          <Button className={classes.link} size=\"small\" color=\"secondary\">\r\n            Info\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardActions> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nProjectCard.defaultProps = {};\r\nexport default ProjectCard;\r\n","import { IconButton, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport myPallete from \"themes/colors\";\r\nimport { BlueRed } from \"themes/themes\";\r\n\r\nconst ActionIcons = (props) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      overflow: \"hidden\",\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      flexDirection: props.direction,\r\n      alignItems: \"center\",\r\n      margin: \"0 auto\",\r\n    },\r\n    icon: {\r\n      margin: \"2px 10px\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={BlueRed}>\r\n        {props.actionIcons.map((icon) => {\r\n          return (\r\n            <IconButton\r\n              key={icon.title}\r\n              onClick={icon.onClick}\r\n              className={classes.icon}\r\n              color={icon.color}\r\n            >\r\n              {icon.icon}\r\n            </IconButton>\r\n          );\r\n        })}\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nActionIcons.defaultProps = {\r\n  direction: \"column\",\r\n};\r\nexport default ActionIcons;\r\n","import { userCall } from \"calls\";\r\n\r\nexport const taskGetCall = async (uuid) => {\r\n  return await userCall(\"tasks\", \"post\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// create group\r\nexport const taskAddCall = async (data, parentID) => {\r\n  return await userCall(\"addtask\", \"post\", { parentID: parentID, ...data });\r\n};\r\n\r\n// delete group\r\nexport const taskDeleteCall = async (uuid) => {\r\n  return await userCall(\"tasks\", \"delete\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// edit group\r\nexport const taskEditCall = async (uuid, data) => {\r\n  return await userCall(\"tasks\", \"patch\", {\r\n    uuid: uuid,\r\n    ...data,\r\n  });\r\n};\r\n","import { taskAddCall, taskDeleteCall, taskEditCall } from \"calls/tasks\";\r\n\r\nexport const addNewTask = async (data, parentID) => {\r\n  console.log(data);\r\n  console.log(parentID);\r\n  return await taskAddCall(data, parentID);\r\n};\r\n\r\nexport const deleteTask = async (uuid) => {\r\n  return await taskDeleteCall(uuid);\r\n};\r\n\r\nexport const editTask = async (uuid, data) => {\r\n  return await taskEditCall(uuid, data);\r\n};\r\n","import { checkForChars, checkInputHasKeys, extractInputKeys } from \"./index.js\";\r\n\r\nexport const invalidAddGroup = (input) => {\r\n  let requiredKeys = [\"groupName\"];\r\n  let acceptedKeys = [\"groupName\", \"pinnedMessage\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!checkInputHasKeys(input, requiredKeys)) {\r\n    return \"Ensure all required feilds are filled\";\r\n  }\r\n  if (input.groupName !== undefined) {\r\n    if (!validGroupName(input.groupName)) {\r\n      return \"Group Names Must be at least 4 charectors\";\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const invalidEditGroup = (input) => {\r\n  let acceptedKeys = [\"groupName\", \"pinnedMessage\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!input) {\r\n    return \"Cannot Submit an empty form.\";\r\n  }\r\n  if (input.groupName !== undefined) {\r\n    if (!validGroupName(input.groupName)) {\r\n      return \"Group Names Must be at least 4 charectors\";\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validGroupName = (name) => {\r\n  if (\r\n    !name ||\r\n    name.length > 63 ||\r\n    name.length < 4 ||\r\n    checkForChars(name, `;|\\`|\\n|\\r`)\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import {\r\n  checkForChars,\r\n  checkInputHasKeys,\r\n  checkUUID,\r\n  extractInputKeys,\r\n} from \"./index.js\";\r\n\r\nexport const invalidAddTask = (input) => {\r\n  let requiredKeys = [\"taskName\"];\r\n  let acceptedKeys = [\"taskName\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!checkInputHasKeys(input, requiredKeys)) {\r\n    return \"Ensure all required feilds are filled\";\r\n  }\r\n  if (!validTaskName(input.taskName)) {\r\n    return \"Task Names Must be at least 3 charectors\";\r\n  }\r\n  return false;\r\n};\r\nexport const invalidEditTask = (input) => {\r\n  let acceptedKeys = [\"taskName\", \"completed\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!input) {\r\n    return \"Cannot Submit an empty form.\";\r\n  }\r\n  if (input.taskName) {\r\n    if (!validTaskName(input.taskName)) {\r\n      return \"Task Names Must be at least 3 charectors\";\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validTaskName = (name) => {\r\n  if (\r\n    name.length > 62 ||\r\n    name.length < 3 ||\r\n    checkForChars(name, `;|\\`|\\n|\\r`)\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import {\r\n  checkForChars,\r\n  checkInputHasKeys,\r\n  checkUUID,\r\n  extractInputKeys,\r\n} from \"./index.js\";\r\n\r\nexport const invalidAddProject = (input) => {\r\n  let requiredKeys = [\"projectName\"];\r\n  let acceptedKeys = [\"projectName\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!checkInputHasKeys(input, requiredKeys)) {\r\n    return \"Ensure all required feilds are filled\";\r\n  }\r\n  if (!validProjectName(input.projectName)) {\r\n    return \"Project Names Must be at least 3 charectors\";\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const invalidEditProject = (input) => {\r\n  let acceptedKeys = [\"projectName\"];\r\n  input = extractInputKeys(input, acceptedKeys);\r\n  if (!input) {\r\n    return \"Cannot Submit an empty form.\";\r\n  }\r\n  if (input.projectName) {\r\n    if (!validProjectName(input.projectName)) {\r\n      return \"Project Names Must be at least 3 charectors\";\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validProjectName = (name) => {\r\n  if (\r\n    name.length > 62 ||\r\n    name.length < 3 ||\r\n    checkForChars(name, `;|\\`|\\n|\\r`)\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import { invalidAddGroup, invalidEditGroup } from \"validation/groups\";\r\nimport { invalidAddTask, invalidEditTask } from \"validation/tasks\";\r\nimport { invalidAddProject, invalidEditProject } from \"validation/projects\";\r\nimport { invalidAddUser, invalidEditUser } from \"validation/users\";\r\n\r\nexport const validations = {\r\n  groupAdd: {\r\n    check: (input) => {\r\n      return invalidAddGroup(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  groupUpd: {\r\n    check: (input) => {\r\n      return invalidEditGroup(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  projectAdd: {\r\n    check: (input) => {\r\n      return invalidAddProject(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call, ensure the parentID is still valid\",\r\n  },\r\n  projectUpd: {\r\n    check: (input) => {\r\n      return invalidEditProject(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  taskAdd: {\r\n    check: (input) => {\r\n      return invalidAddTask(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call, ensure the parentID is still valid\",\r\n  },\r\n  taskUpd: {\r\n    check: (input) => {\r\n      return invalidEditTask(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  userAdd: {\r\n    check: (input) => {\r\n      return invalidAddUser(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  userUpd: {\r\n    check: (input) => {\r\n      return invalidEditUser(input);\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  inviteAdd: {\r\n    check: (input) => {\r\n      return true;\r\n    },\r\n    failedMsg: \"Unknown Bad Call\",\r\n  },\r\n  Del: {\r\n    check: (input) => {\r\n      if (input.confirm) {\r\n        input.confirm = input.confirm.toLowerCase();\r\n        if (input.confirm === \"delete\") {\r\n          return false;\r\n        }\r\n      }\r\n      return \"You must type DELETE to confirm.\";\r\n    },\r\n    failedMsg: \"Unknown Bad Call, ensure the item still exists\",\r\n  },\r\n};\r\n\r\nexport const validationPicker = (dataType, action) => {\r\n  try {\r\n    dataType = dataType.toLowerCase();\r\n    let validator = validations[`${dataType}${action}`];\r\n    if (validator) {\r\n      return validator;\r\n    } else {\r\n      return {\r\n        check: (input) => {\r\n          console.log(\"Shh no Validation\");\r\n        },\r\n      };\r\n    }\r\n  } catch {\r\n    return {\r\n      check: (input) => {\r\n        console.log(\"Shh no Validation\");\r\n      },\r\n    };\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  CardActionArea,\r\n  Grid,\r\n  Typography,\r\n  ThemeProvider,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImageBox from \"components/index/ImageBox\";\r\nimport { getContentForGroup } from \"actions/groups\";\r\nimport { Check, Delete, Edit } from \"@material-ui/icons\";\r\nimport ActionIcons from \"components/index/ActionIcons\";\r\nimport { deleteTask, editTask } from \"actions/tasks\";\r\nimport { setCacheExpired } from \"cache\";\r\nimport { BlueRed, GreenRed } from \"themes/themes\";\r\nimport { validationPicker } from \"functions/validation\";\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    margin: \"0 5px\",\r\n    padding: 5,\r\n    textAlign: \"left\",\r\n  },\r\n  linkArea: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"2px 10px\",\r\n  },\r\n  link: {\r\n    width: \"50%\",\r\n  },\r\n});\r\n\r\nfunction TaskCard(props) {\r\n  const classes = useStyles();\r\n\r\n  let checkColor = \"inherit\";\r\n  if (props.cardData.completed) {\r\n    checkColor = \"primary\";\r\n  }\r\n\r\n  const checkClicked = async () => {\r\n    const itWorked = await editTask(props.cardData.uuid, {\r\n      completed: !props.cardData.completed,\r\n    });\r\n    if (itWorked) {\r\n      setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n      props.feedControls.setStateTasks(props.feedControls.projectParentID);\r\n    }\r\n  };\r\n\r\n  const actionIcons = [\r\n    {\r\n      title: \"Delete Task\",\r\n      icon: <Delete />,\r\n      color: \"secondary\",\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Delete Task\",\r\n          subtitle: \"Perminantly Delete Task\",\r\n          inputs: [{ name: \"confirm\", label: \"Confirm Delete\" }],\r\n          submit: async (data) => {\r\n            const itWorked = await deleteTask(props.cardData.uuid);\r\n            if (itWorked) {\r\n              setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n              props.feedControls.setStateTasks(\r\n                props.feedControls.projectParentID\r\n              );\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"\", \"Del\").check(data);\r\n          },\r\n        });\r\n      },\r\n    },\r\n    {\r\n      title: \"Edit Task\",\r\n      icon: <Edit />,\r\n      color: \"primary\",\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Edit Task\",\r\n          title: \"Perminantly Edit Task\",\r\n          inputs: [\r\n            {\r\n              name: \"taskName\",\r\n              label: \"Edit task name\",\r\n              prefill: props.cardData.taskName,\r\n            },\r\n            {\r\n              name: \"completed\",\r\n              label: \"Is the task Completed?\",\r\n              type: \"checkBox\",\r\n              startChecked: props.cardData.completed,\r\n            },\r\n          ],\r\n          submit: async (data) => {\r\n            const itWorked = await editTask(props.cardData.uuid, data);\r\n            if (itWorked) {\r\n              setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n              props.feedControls.setStateTasks(\r\n                props.feedControls.projectParentID\r\n              );\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"task\", \"Upd\").check(data);\r\n          },\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className={(classes.body, classes.fullWidth)} component=\"button\">\r\n        <Grid container className={classes.body}>\r\n          <Grid item xs={10}>\r\n            <div className={classes.title}>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" component=\"h5\">\r\n                {props.cardData.taskName}\r\n              </Typography>\r\n              <ThemeProvider theme={GreenRed}>\r\n                <IconButton onClick={checkClicked}>\r\n                  <Check color={checkColor} />\r\n                </IconButton>\r\n              </ThemeProvider>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={2}>\r\n            <ThemeProvider theme={BlueRed}>\r\n              <ActionIcons\r\n                // direction=\"row\"\r\n                actionControls={props.actionControls}\r\n                modalControls={props.modalControls}\r\n                actionIcons={actionIcons}\r\n              />\r\n            </ThemeProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {/* <CardActions className={classes.linkArea}>\r\n        <ButtonGroup variant=\"contained\" className={classes.fullWidth}>\r\n          <Button className={classes.link} size=\"small\" color=\"primary\">\r\n            Members\r\n          </Button>\r\n          <Button className={classes.link} size=\"small\" color=\"secondary\">\r\n            Info\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardActions> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskCard.defaultProps = {\r\n  edit: false,\r\n};\r\nexport default TaskCard;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { CardActionArea, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImageBox from \"components/index/ImageBox\";\r\nimport { getContentForGroup } from \"actions/groups\";\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    margin: \"0 5px\",\r\n    padding: 5,\r\n    textAlign: \"left\",\r\n  },\r\n  linkArea: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    width: \"50%\",\r\n  },\r\n});\r\n\r\nfunction InviteCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const linkClicked = async () => {\r\n    console.log(props.cardData);\r\n    props.displayControls.setState(props.cardData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardActionArea\r\n        className={(classes.body, classes.fullWidth)}\r\n        component=\"button\"\r\n        onClick={linkClicked}\r\n      >\r\n        <Grid container className={classes.body}>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h5\">\r\n              {props.cardData.groupName}\r\n            </Typography>\r\n            <Typography varient=\"p\" component=\"p\">\r\n              \"{props.cardData.pinnedMessage}\"\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <ImageBox img={`/img/gr/${props.cardData.imgLink}`} height={100} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n      {/* <CardActions className={classes.linkArea}>\r\n        <ButtonGroup variant=\"contained\" className={classes.fullWidth}>\r\n          <Button className={classes.link} size=\"small\" color=\"primary\">\r\n            Members\r\n          </Button>\r\n          <Button className={classes.link} size=\"small\" color=\"secondary\">\r\n            Info\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardActions> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nInviteCard.defaultProps = {\r\n  edit: false,\r\n};\r\nexport default InviteCard;\r\n","import React from \"react\";\r\n\r\nimport { Card as MuiCard } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GroupCard from \"components/home/GroupCard\";\r\nimport ProjectCard from \"components/group/ProjectCard\";\r\nimport TaskCard from \"components/projects/TaskCard\";\r\nimport InviteCard from \"components/invites/InviteCard\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    width: \"100%\",\r\n    margin: \"10px auto\",\r\n    border: \"1px solid grey\",\r\n    overflow: \"Hidden\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nfunction Card(props) {\r\n  const classes = useStyles();\r\n\r\n  let cardContent = <h2>Error</h2>;\r\n\r\n  if (props.cardType === \"group\") {\r\n    cardContent = (\r\n      <GroupCard cardData={props.groupData} feedControls={props.feedControls} />\r\n    );\r\n  } else if (props.cardType === \"project\") {\r\n    cardContent = (\r\n      <ProjectCard\r\n        cardData={props.projectData}\r\n        feedControls={props.feedControls}\r\n      />\r\n    );\r\n  } else if (props.cardType === \"task\") {\r\n    cardContent = (\r\n      <TaskCard\r\n        cardData={props.taskData}\r\n        feedControls={props.feedControls}\r\n        modalControls={props.modalControls}\r\n      />\r\n    );\r\n  } else if (props.cardType === \"invite\") {\r\n    cardContent = (\r\n      <InviteCard\r\n        cardData={props.inviteData}\r\n        feedControls={props.feedControls}\r\n        modalControls={props.modalControls}\r\n        displayControls={props.displayControls}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <MuiCard className={classes.root}>{cardContent}</MuiCard>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nfunction CalendarPreview() {\r\n  return (\r\n    <div>\r\n      <h1>Calendar Here Soon</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarPreview;\r\n","import {\r\n  ButtonGroup,\r\n  Hidden,\r\n  IconButton,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add,\r\n  ArrowDropDown,\r\n  ArrowDropUp,\r\n  Delete,\r\n  Edit,\r\n} from \"@material-ui/icons\";\r\nimport { addNewGroup } from \"actions/groups\";\r\nimport React, { useState } from \"react\";\r\nimport myPallete from \"themes/colors\";\r\n\r\nimport { BlackWhite } from \"themes/themes\";\r\nconst ActionButtons = (props) => {\r\n  let holderDisplay = \"flex\";\r\n  let handleArrow = <ArrowDropDown />;\r\n  let handleRadius = 0;\r\n  if (!props.actionControls.isOpen) {\r\n    holderDisplay = \"none\";\r\n    handleArrow = <ArrowDropUp />;\r\n    handleRadius = 30;\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      zIndex: 500,\r\n      width: 42,\r\n      position: \"fixed\",\r\n      bottom: 125,\r\n      right: 10,\r\n    },\r\n    holder: {\r\n      background: myPallete.md,\r\n      overflow: \"hidden\",\r\n      position: \"relative\",\r\n      display: holderDisplay,\r\n      bottom: -8,\r\n      right: 0,\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      margin: \"0 auto\",\r\n      borderRadius: `30px 30px 0 0`,\r\n      border: `2px solid ${myPallete.sec}`,\r\n    },\r\n    handle: {\r\n      background: myPallete.sec,\r\n      width: 42,\r\n      height: 42,\r\n      position: \"absolute\",\r\n      bottom: -50,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderRadius: `${handleRadius}px ${handleRadius}px 30px 30px`,\r\n    },\r\n    handleIcon: {\r\n      margin: \"0 auto\",\r\n      padding: \"0\",\r\n    },\r\n    icon: {\r\n      margin: \"2px 10px\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const handleClicked = (e) => {\r\n    props.actionControls.toggle();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={BlackWhite}>\r\n        <div className={classes.holder}>\r\n          {props.actionIcons.map((icon) => {\r\n            return (\r\n              <IconButton\r\n                key={icon.title}\r\n                onClick={icon.onClick}\r\n                className={classes.icon}\r\n                color=\"primary\"\r\n              >\r\n                {icon.icon}\r\n              </IconButton>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={classes.handle}>\r\n          <IconButton\r\n            className={classes.handleIcon}\r\n            color=\"secondary\"\r\n            variant=\"solid\"\r\n            onClick={handleClicked}\r\n          >\r\n            {handleArrow}\r\n          </IconButton>\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButtons;\r\n","import { Hidden, makeStyles } from \"@material-ui/core\";\r\nimport CalendarPreview from \"components/calendar/CalendarPreview\";\r\nimport ActionButtons from \"components/index/ActionButtons\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: \"center\",\r\n    padding: 25,\r\n    overflow: \"Hidden\",\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction HomeHead(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Hello</h1>\r\n      <p>Some nice branding here</p>\r\n      <CalendarPreview />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeHead;\r\n","import { Add, Email } from \"@material-ui/icons\";\r\nimport { addNewGroup } from \"actions/groups\";\r\nimport { getMyInvites } from \"actions/invites\";\r\nimport { setCacheExpired } from \"cache\";\r\nimport { inviteCache } from \"cache/Invites\";\r\nimport ActionButtons from \"components/index/ActionButtons\";\r\nimport { validationPicker } from \"functions/validation\";\r\nimport React from \"react\";\r\n\r\nconst HomeActions = (props) => {\r\n  const actionIcons = [\r\n    {\r\n      title: \"Add Group\",\r\n      icon: <Add />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Add Group\",\r\n          subtitle: \"Create a new group!\",\r\n          inputs: [\r\n            { name: \"groupName\", label: \"Group Name\", required: true },\r\n            {\r\n              name: \"pinnedMessage\",\r\n              label: \"Pin a Message\",\r\n            },\r\n          ],\r\n          submit: async (data) => {\r\n            const didMake = await addNewGroup(data);\r\n            if (didMake) {\r\n              setCacheExpired(\"groupData\");\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"group\", \"Add\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n    {\r\n      title: \"Invites\",\r\n      icon: <Email />,\r\n      onClick: () => {\r\n        props.actionControls.close();\r\n        props.feedControls.setState(\"invites\");\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ActionButtons\r\n      actionControls={props.actionControls}\r\n      modalControls={props.modalControls}\r\n      actionIcons={actionIcons}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HomeActions;\r\n","import { CircularProgress, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Block, Toys } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport ImageBox from \"./ImageBox\";\r\nimport LoadingWheel from \"./LoadingWheel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: 20,\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  iconBox: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    margin: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  words: {\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    margin: 15,\r\n  },\r\n});\r\n\r\nfunction NotFound(props) {\r\n  const classes = useStyles();\r\n  const [DisplayState, setDisplayState] = useState(\r\n    <LoadingWheel variant=\"small\" />\r\n  );\r\n  setTimeout(() => {\r\n    setDisplayState(\r\n      <div className={classes.root}>\r\n        <div className={classes.iconBox}>\r\n          <Block />\r\n        </div>\r\n        <Typography className={classes.words} variant=\"body1\">\r\n          No Content Found\r\n        </Typography>\r\n        <ImageBox img={\"img/logo.svg\"} height={48} />\r\n      </div>\r\n    );\r\n  }, 2500);\r\n\r\n  return <div>{DisplayState}</div>;\r\n}\r\nexport default NotFound;\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { getMyGroups } from \"actions/groups\";\r\nimport {\r\n  awaitCacheUpdate,\r\n  checkCacheIsValid,\r\n  checkForCacheUpdate,\r\n  setCacheWhenUpdated,\r\n} from \"cache\";\r\nimport Card from \"components/index/Card\";\r\nimport React, { useState } from \"react\";\r\nimport { groupCache } from \"cache/groups\";\r\nimport HomeHead from \"./HomeHead\";\r\nimport HomeActions from \"./HomeActions\";\r\nimport LoadingWheel from \"components/index/LoadingWheel\";\r\nimport NotFound from \"components/index/NotFound\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 116px)\",\r\n  },\r\n});\r\n\r\nconst GroupFeed = (props) => {\r\n  const classes = useStyles();\r\n  const [groupsState, setGroupsState] = useState(null);\r\n\r\n  const groupsControls = {\r\n    curState: groupsState,\r\n    setState: async (val) => {\r\n      setGroupsState(val);\r\n    },\r\n    setStateToCache: async () => {\r\n      // if there are no groups in state\r\n      if (groupsState !== null) {\r\n        if (groupsState.length < 1 || !checkCacheIsValid(\"groupData\")) {\r\n          // if there data in cache is invalid\r\n          if (!checkCacheIsValid(\"groupData\")) {\r\n            setCacheWhenUpdated(\"groupData\", setGroupsState);\r\n          } else {\r\n            setGroupsState(groupCache());\r\n          }\r\n        }\r\n      } else {\r\n        setGroupsState([]);\r\n      }\r\n    },\r\n  };\r\n\r\n  // set the cache to update if expired\r\n  getMyGroups();\r\n  // get the cached data async\r\n  groupsControls.setStateToCache();\r\n  // groupsControls.setState(groupCache());\r\n  const groupsArr = groupsControls.curState;\r\n  //  if groups empty then display none icon\r\n  let content = <NotFound />;\r\n  // check there is data there\r\n  if (groupsState) {\r\n    content = (\r\n      <Container maxWidth=\"sm\">\r\n        <h3>My Groups</h3>\r\n        {groupsArr.map((item) => {\r\n          return (\r\n            <Card\r\n              cardType=\"group\"\r\n              key={item.uuid}\r\n              groupData={item}\r\n              feedControls={props.feedControls}\r\n            />\r\n          );\r\n        })}\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root} onClick={props.actionControls.close}>\r\n        <HomeHead />\r\n        {content}\r\n      </div>\r\n      <HomeActions\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n        feedControls={props.feedControls}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupFeed;\r\n","import { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStlyes = makeStyles({\r\n  root: {\r\n    padding: 10,\r\n  },\r\n});\r\n\r\n// Take an obj make Tabs\r\n// use material ui for tabs\r\n\r\nfunction InfoArea() {\r\n  const classes = useStlyes();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Stat 1\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            126 210 210\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Stat 1\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            126 210 210\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Stat 1\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            126 210 210\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoArea;\r\n","import { Button, ButtonGroup, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  btn: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport const InfoButtons = (props) => {\r\n  const classes = useStyles();\r\n  const infoButtonClicked = (e) => {\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <ButtonGroup size=\"small\" variant=\"contained\" className={classes.root}>\r\n      <Button\r\n        className={classes.btn}\r\n        value={0}\r\n        variant=\"text\"\r\n        color=\"\"\r\n        onClick={infoButtonClicked}\r\n      >\r\n        Info\r\n      </Button>\r\n      <Button\r\n        className={classes.btn}\r\n        value={1}\r\n        color=\"primary\"\r\n        onClick={infoButtonClicked}\r\n      >\r\n        Members\r\n      </Button>\r\n      <Button\r\n        className={classes.btn}\r\n        value={2}\r\n        color=\"primary\"\r\n        onClick={infoButtonClicked}\r\n      >\r\n        Dates\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default InfoButtons;\r\n","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: \"10px 0\",\r\n    background: \"#8b46bf\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  }\r\n})\r\n\r\nfunction HeadBanner(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography className={classes.root} component=\"h5\" variant=\"h5\">\r\n      {props.content}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default HeadBanner;\r\n","import {\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  Divider,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport InfoArea from \"components/index/InfoArea\";\r\nimport InfoButtons from \"components/index/InfoButtons\";\r\nimport NotFound from \"components/index/NotFound\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport HeadBanner from \"../index/HeadBanner\";\r\nimport ImageBox from \"../index/ImageBox\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  listHead: {\r\n    marginBottom: \"10px 0\",\r\n    background: \"#8b46bf\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  },\r\n  pinnedMessage: {\r\n    background: \"#67a5d6\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nfunction GroupHead(props) {\r\n  const classes = useStyles();\r\n  let content = <NotFound />;\r\n  if (props.groupData) {\r\n    content = (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.heading} component=\"h5\" variant=\"h5\">\r\n          {props.groupData.groupName}\r\n        </Typography>\r\n        <ImageBox height={120} img={`/img/gr/${props.groupData.imgLink}`} />\r\n        <Divider />\r\n        <InfoButtons />\r\n        <InfoArea />\r\n        <Typography className={classes.pinnedMessage}>\r\n          \"{props.groupData.pinnedMessage}\"\r\n        </Typography>\r\n        <HeadBanner content=\"Projects\" class={classes.listHead} />\r\n      </div>\r\n    );\r\n  }\r\n  return <div>{content}</div>;\r\n}\r\n\r\nexport default GroupHead;\r\n","import { userCall } from \"calls\";\r\n\r\nexport const projectGetCall = async (uuid) => {\r\n  return await userCall(\"projects\", \"post\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// create group\r\nexport const projectAddCall = async (data, parentID) => {\r\n  return await userCall(\"addproject\", \"post\", { parentID: parentID, ...data });\r\n};\r\n\r\n// delete group\r\nexport const projectDeleteCall = async (uuid) => {\r\n  return await userCall(\"projects\", \"delete\", {\r\n    uuid: uuid,\r\n  });\r\n};\r\n\r\n// edit group\r\nexport const projectEditCall = async (uuid, data) => {\r\n  return await userCall(\"projects\", \"patch\", {\r\n    uuid: uuid,\r\n    ...data,\r\n  });\r\n};\r\n","import {\r\n  projectAddCall,\r\n  projectDeleteCall,\r\n  projectEditCall,\r\n} from \"calls/projects\";\r\n\r\nexport const addNewProject = async (data, parentID) => {\r\n  return await projectAddCall(data, parentID);\r\n};\r\n\r\nexport const deleteProject = async (uuid) => {\r\n  return await projectDeleteCall(uuid);\r\n};\r\n\r\nexport const editProject = async (uuid, data) => {\r\n  return await projectEditCall(uuid, data);\r\n};\r\n","import ActionButtons from \"components/index/ActionButtons\";\r\nimport React from \"react\";\r\nimport { Add, Delete, Edit, PersonAdd } from \"@material-ui/icons\";\r\nimport { deleteGroup, editGroup } from \"actions/groups\";\r\nimport { setCacheExpired } from \"cache\";\r\nimport { addNewProject } from \"actions/projects\";\r\nimport { validationPicker } from \"functions/validation\";\r\nconst GroupActions = (props) => {\r\n  const actionIcons = [\r\n    {\r\n      title: \"Add Project\",\r\n      icon: <Add />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Add Project\",\r\n          inputs: [{ name: \"projectName\", label: \"Project Name\" }],\r\n          submit: async (data) => {\r\n            const itWorked = addNewProject(\r\n              data,\r\n              props.feedControls.groupParentID\r\n            );\r\n            if (itWorked) {\r\n              console.log(\"Added Project\");\r\n              setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n              props.feedControls.reRenderFeed();\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"project\", \"Add\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n    {\r\n      title: \"Delete Group\",\r\n      icon: <Delete />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Delete Group\",\r\n          inputs: [{ name: \"confirm\", label: \"Confirm Delete\" }],\r\n          submit: async () => {\r\n            const itWorked = await deleteGroup(\r\n              props.feedControls.groupParentID\r\n            );\r\n            if (itWorked) {\r\n              props.feedControls.setStateGroups();\r\n              setCacheExpired(\"groupData\");\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"\", \"Del\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n    {\r\n      title: \"Edit Group\",\r\n      icon: <Edit />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Edit Group\",\r\n          subtitle: `Edit Group `,\r\n          inputs: [\r\n            {\r\n              name: \"groupName\",\r\n              label: \"Group Name\",\r\n              prefill: props.groupData.groupName,\r\n            },\r\n            {\r\n              name: \"pinnedMessage\",\r\n              label: \"Pin a Message\",\r\n              prefill: props.groupData.pinnedMessage,\r\n            },\r\n          ],\r\n          submit: async (data) => {\r\n            const itWorked = await editGroup(\r\n              props.feedControls.groupParentID,\r\n              data\r\n            );\r\n            if (itWorked) {\r\n              setCacheExpired(\"groupData\");\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"group\", \"Upd\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n    {\r\n      title: \"Invites\",\r\n      icon: <PersonAdd />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"list\", {\r\n          head: \"Group Invites\",\r\n          group: props.feedControls.groupParentID,\r\n          getList: [],\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ActionButtons\r\n      actionControls={props.actionControls}\r\n      modalControls={props.modalControls}\r\n      actionIcons={actionIcons}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GroupActions;\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { getContentForGroup, getMyGroups } from \"actions/groups\";\r\nimport { groupByUUIDCache, groupContentCache } from \"cache/groups\";\r\nimport ActionButtons from \"components/index/ActionButtons\";\r\nimport Card from \"components/index/Card\";\r\nimport React from \"react\";\r\nimport GroupHead from \"./GroupHead\";\r\nimport GroupActions from \"./GroupActions\";\r\nimport { checkForCacheUpdate } from \"cache\";\r\nimport NotFound from \"components/index/NotFound\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 116px)\",\r\n  },\r\n});\r\n\r\nconst ProjectFeed = (props) => {\r\n  const classes = useStyles();\r\n  // set the cache to update if expired for bot groups and projects\r\n  getMyGroups();\r\n  getContentForGroup(props.feedControls.groupParentID);\r\n  // set a timer to check if the cache has updated\r\n  checkForCacheUpdate(props.feedControls.reRenderFeed, \"groupData\");\r\n  checkForCacheUpdate(\r\n    props.feedControls.reRenderFeed,\r\n    \"groupContent\",\r\n    props.feedControls.groupParentID\r\n  );\r\n\r\n  // set the data to the state ???????\r\n  const contentArr = groupContentCache(props.feedControls.groupParentID);\r\n  // check there is data there\r\n  let listContent = <NotFound />;\r\n  if (contentArr) {\r\n    const projectsArr = contentArr.projects;\r\n    listContent = projectsArr.map((item) => {\r\n      return (\r\n        <Card\r\n          key={item.uuid}\r\n          cardType={\"project\"}\r\n          projectData={item}\r\n          feedControls={props.feedControls}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  const groupData = groupByUUIDCache(props.feedControls.groupParentID);\r\n  return (\r\n    <div>\r\n      <div onClick={props.actionControls.close} className={classes.root}>\r\n        <GroupHead groupData={groupData} />\r\n        <Container maxWidth=\"sm\">{listContent}</Container>\r\n      </div>\r\n      <GroupActions\r\n        groupData={groupData}\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n        feedControls={props.feedControls}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectFeed;\r\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport ImageBox from \"./ImageBox\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"65vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  iconBox: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nfunction ErrorPage(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageBox img={\"img/logo.svg\"} height={150} />\r\n      <div className={classes.iconBox}>\r\n        <Delete />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ErrorPage;\r\n","import {\r\n  Button,\r\n  ButtonGroup,\r\n  Divider,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { getProjectFromContent } from \"cache/projects\";\r\nimport { groupByUUIDCache } from \"cache/groups\";\r\nimport InfoArea from \"components/index/InfoArea\";\r\nimport InfoButtons from \"components/index/InfoButtons\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport HeadBanner from \"../index/HeadBanner\";\r\nimport ImageBox from \"../index/ImageBox\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  listHead: {\r\n    marginBottom: \"10px 0\",\r\n    background: \"#8b46bf\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  },\r\n  pinnedMessage: {\r\n    background: \"#67a5d6\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nfunction ProjectHead(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageBox width={\"100%\"} img={`/img/pr/${props.projectData.imgLink}`} />\r\n      <Typography className={classes.heading} component=\"h5\" variant=\"h5\">\r\n        {props.projectData.projectName}\r\n      </Typography>\r\n      <Divider />\r\n      <InfoButtons />\r\n      <InfoArea />\r\n      <HeadBanner content=\"Tasks\" class={classes.listHead} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectHead;\r\n","import ActionButtons from \"components/index/ActionButtons\";\r\nimport React from \"react\";\r\nimport { Add, Delete, Edit } from \"@material-ui/icons\";\r\nimport { addNewGroup, deleteGroup, editGroup } from \"actions/groups\";\r\nimport { setCacheExpired } from \"cache\";\r\nimport { addNewProject, deleteProject, editProject } from \"actions/projects\";\r\nimport { addNewTask } from \"actions/tasks\";\r\nimport { validationPicker } from \"functions/validation\";\r\n\r\nconst ProjectActions = (props) => {\r\n  const actionIcons = [\r\n    {\r\n      title: \"Add Task\",\r\n      icon: <Add />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Add Task\",\r\n          inputs: [{ name: \"taskName\", label: \"Task Name\", required: true }],\r\n          submit: async (data) => {\r\n            const itWorked = addNewTask(\r\n              data,\r\n              props.feedControls.projectParentID\r\n            );\r\n            if (itWorked) {\r\n              setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n              props.feedControls.reRenderFeed();\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"task\", \"Add\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n    {\r\n      title: \"Delete Project\",\r\n      icon: <Delete />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Delete Project\",\r\n          inputs: [{ name: \"confirm\", label: \"Confirm Delete\" }],\r\n          submit: async () => {\r\n            const itWorked = await deleteProject(\r\n              props.feedControls.projectParentID\r\n            );\r\n            if (itWorked) {\r\n              setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n              props.feedControls.setStateProjects(\r\n                props.feedControls.groupParentID\r\n              );\r\n              props.modalControls.setState();\r\n            }\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"\", \"Del\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n    {\r\n      title: \"Edit Project\",\r\n      icon: <Edit />,\r\n      onClick: () => {\r\n        props.modalControls.setState(true, \"form\", {\r\n          title: \"Edit Project\",\r\n          subtitle: `Edit Project `,\r\n          inputs: [\r\n            {\r\n              name: \"projectName\",\r\n              label: \"Project Name\",\r\n              prefill: props.projectData.projectName,\r\n            },\r\n          ],\r\n          submit: async (data) => {\r\n            const itWorked = await editProject(\r\n              props.feedControls.projectParentID,\r\n              data\r\n            );\r\n            if (itWorked) {\r\n              setCacheExpired(\"groupContent\", props.feedControls.groupParentID);\r\n              props.modalControls.setState();\r\n            }\r\n            props.modalControls.setState();\r\n          },\r\n          checkValid: (data) => {\r\n            return validationPicker(\"project\", \"Upd\").check(data);\r\n          },\r\n        });\r\n        props.actionControls.close();\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ActionButtons\r\n      actionControls={props.actionControls}\r\n      modalControls={props.modalControls}\r\n      actionIcons={actionIcons}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectActions;\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { getContentForGroup } from \"actions/groups\";\r\nimport { groupContentCache } from \"cache/groups\";\r\nimport Card from \"components/index/Card\";\r\nimport React from \"react\";\r\nimport { checkForCacheUpdate } from \"cache\";\r\nimport { filterArrayForParentID, filterArrayForUUID } from \"functions\";\r\nimport ProjectHead from \"./ProjectHead\";\r\nimport ProjectActions from \"./ProjectActoins\";\r\nimport NotFound from \"components/index/NotFound\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 116px)\",\r\n  },\r\n});\r\n\r\nconst TaskFeed = (props) => {\r\n  const classes = useStyles();\r\n  // set the cache to update if expired for bot groups and projects\r\n  getContentForGroup(props.feedControls.groupParentID);\r\n  // set a timer to check if the cache has updated\r\n  checkForCacheUpdate(\r\n    props.feedControls.reRenderFeed,\r\n    \"groupContent\",\r\n    props.feedControls.groupParentID\r\n  );\r\n\r\n  // set the data to the state ???????\r\n  const contentArr = groupContentCache(props.feedControls.groupParentID);\r\n  const curProject = filterArrayForUUID(\r\n    contentArr.projects,\r\n    props.feedControls.projectParentID\r\n  );\r\n\r\n  // console.log(contentArr);\r\n  // check there is data there\r\n  let listContent = <NotFound />;\r\n  let tasksArr = contentArr.tasks;\r\n  tasksArr = filterArrayForParentID(\r\n    tasksArr,\r\n    props.feedControls.projectParentID\r\n  );\r\n  if (tasksArr) {\r\n    listContent = tasksArr.map((item) => {\r\n      return (\r\n        <Card\r\n          key={item.uuid}\r\n          cardType={\"task\"}\r\n          taskData={item}\r\n          feedControls={props.feedControls}\r\n          modalControls={props.modalControls}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <div onClick={props.actionControls.close} className={classes.root}>\r\n        <ProjectHead\r\n          projectData={curProject}\r\n          groupID={props.feedControls.groupParentID}\r\n        />\r\n        <Container maxWidth=\"sm\">{listContent}</Container>\r\n      </div>\r\n      <ProjectActions\r\n        projectData={curProject}\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n        feedControls={props.feedControls}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskFeed;\r\n","import {\r\n  Button,\r\n  ButtonGroup,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { replyToInvite } from \"actions/invites\";\r\nimport { setCacheExpired } from \"cache\";\r\nimport React from \"react\";\r\nimport myPallete from \"themes/colors\";\r\nimport { GreenRed } from \"themes/themes\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"#333333bb\",\r\n    width: \"100%\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    borderBottom: `2px solid ${myPallete.dk}`,\r\n  },\r\n  group: { width: \"66%\", border: `2px solid ${myPallete.dk}` },\r\n  btn: { width: \"50%\" },\r\n});\r\n\r\nexport const AcceptDecline = (props) => {\r\n  console.log(props);\r\n  const AcceptClicked = async () => {\r\n    console.log(\"ACcept\");\r\n    const itWorked = await replyToInvite(props.inviteData.groupID, 1);\r\n    if (itWorked) {\r\n      setCacheExpired(\"inviteData\");\r\n      setCacheExpired(\"groupData\");\r\n      props.feedControls.setStateGroups();\r\n    }\r\n  };\r\n\r\n  const DeclineClicked = async () => {\r\n    console.log(\"Decline\");\r\n\r\n    const itWorked = await replyToInvite(props.inviteData.groupID, 0);\r\n    if (itWorked) {\r\n      setCacheExpired(\"inviteData\");\r\n      setCacheExpired(\"groupData\");\r\n      props.feedControls.setState(\"invites\");\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={GreenRed}>\r\n        <ButtonGroup className={classes.group} variant=\"contained\">\r\n          <Button\r\n            className={classes.btn}\r\n            color=\"primary\"\r\n            onClick={AcceptClicked}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button\r\n            className={classes.btn}\r\n            color=\"secondary\"\r\n            onClick={DeclineClicked}\r\n          >\r\n            Decline\r\n          </Button>\r\n        </ButtonGroup>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AcceptDecline;\r\n","import {\r\n  Button,\r\n  ButtonGroup,\r\n  Divider,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport InfoArea from \"components/index/InfoArea\";\r\nimport InfoButtons from \"components/index/InfoButtons\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport HeadBanner from \"../index/HeadBanner\";\r\nimport ImageBox from \"../index/ImageBox\";\r\nimport AcceptDecline from \"./AcceptDecline\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n    padding: 20,\r\n  },\r\n  listHead: {\r\n    marginBottom: \"10px 0\",\r\n    background: \"#8b46bf\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  },\r\n  pinnedMessage: {\r\n    background: \"#67a5d6\",\r\n    color: \"white\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nfunction InviteHead(props) {\r\n  const classes = useStyles();\r\n  const inviteData = props.displayControls.curState;\r\n  let content = (\r\n    <div className={classes.root}>\r\n      <h1 className={classes.heading}>Select an Invite</h1>\r\n    </div>\r\n  );\r\n  if (inviteData.groupName) {\r\n    console.log(\"selected\");\r\n    content = (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.heading} component=\"h5\" variant=\"h5\">\r\n          {inviteData.groupName}\r\n        </Typography>\r\n        <ImageBox height={120} img={`/img/gr/${inviteData.imgLink}`} />\r\n        <Divider />\r\n        <Typography className={classes.pinnedMessage}>\r\n          \"{inviteData.pinnedMessage}\"\r\n        </Typography>\r\n        <AcceptDecline\r\n          inviteData={inviteData}\r\n          feedControls={props.feedControls}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>{content}</div>;\r\n}\r\n\r\nexport default InviteHead;\r\n","import { Container, makeStyles } from \"@material-ui/core\";\r\nimport { getMyGroups } from \"actions/groups\";\r\nimport { checkForCacheUpdate } from \"cache\";\r\nimport Card from \"components/index/Card\";\r\nimport React, { useState } from \"react\";\r\nimport { groupCache } from \"cache/groups\";\r\nimport LoadingWheel from \"components/index/LoadingWheel\";\r\nimport InviteHead from \"./InviteHead\";\r\nimport { getMyInvites } from \"actions/invites\";\r\nimport { inviteCache } from \"cache/Invites\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 116px)\",\r\n  },\r\n});\r\n\r\nconst InviteFeed = (props) => {\r\n  const classes = useStyles();\r\n  const [displayState, setDisplayState] = useState({});\r\n\r\n  const displayControls = {\r\n    curState: displayState,\r\n    setState: (invite = {}) => {\r\n      setDisplayState(invite);\r\n    },\r\n  };\r\n  // set the cache to update if expired\r\n  getMyInvites();\r\n\r\n  // set a timer to check if the cache has updated\r\n  checkForCacheUpdate(props.feedControls.reRenderFeed, \"inviteData\");\r\n  // get the cached data\r\n  const invitesArr = inviteCache();\r\n  //  if groups empty then display none icon\r\n  let content = <LoadingWheel />;\r\n  // check there is data there\r\n  if (Array.isArray(invitesArr)) {\r\n    content = (\r\n      <div>\r\n        <div className={classes.root} onClick={props.actionControls.close}>\r\n          <InviteHead displayControls={displayControls}                   feedControls={props.feedControls}\r\n />\r\n          <Container maxWidth=\"sm\">\r\n            <h3>My Invites</h3>\r\n            {invitesArr.map((item) => {\r\n              return (\r\n                <Card\r\n                  cardType=\"invite\"\r\n                  key={item.groupName}\r\n                  inviteData={item}\r\n                  displayControls={displayControls}\r\n                  feedControls={props.feedControls}\r\n                />\r\n              );\r\n            })}\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n  }\r\n  return <div>{content}</div>;\r\n};\r\n\r\nexport default InviteFeed;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\nimport { groupCache } from \"cache\";\r\nimport GroupFeed from \"components/home/GroupFeed\";\r\nimport { checkCacheExpired } from \"validation\";\r\nimport ProjectFeed from \"components/group/ProjectFeed\";\r\nimport LoadingWheel from \"components/index/LoadingWheel\";\r\nimport ErrorPage from \"components/index/ErrorPage\";\r\nimport TaskFeed from \"components/projects/TaskFeed\";\r\nimport NotFound from \"components/index/NotFound\";\r\nimport InviteFeed from \"components/invites/InviteFeed\";\r\n\r\n// import Card from \"../../../components/Card\";\r\n// import CardTight from \"../../../components/CardTight\";\r\n// import GroupHead from \"../../../components/GroupHead\";\r\n// import ProjectHead from \"../../../components/ProjectHead\";\r\n// import TaskHead from \"../../../components/TaskHead\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nfunction Feed(props) {\r\n  const classes = useStyles();\r\n  // console.log(props.feedControls);\r\n\r\n  let feedHTML = <ErrorPage />;\r\n  if (props.feedControls.curState === \"groups\") {\r\n    // send a request for new data from API\r\n    // populate the ui\r\n    feedHTML = (\r\n      <GroupFeed\r\n        feedControls={props.feedControls}\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n      />\r\n    );\r\n  } else if (props.feedControls.curState === \"projects\") {\r\n    // send a request for new data from API\r\n    // populate the ui\r\n    feedHTML = (\r\n      <ProjectFeed\r\n        feedControls={props.feedControls}\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n      />\r\n    );\r\n  } else if (props.feedControls.curState === \"tasks\") {\r\n    // send a request for new data from API\r\n    // populate the ui\r\n    feedHTML = (\r\n      <TaskFeed\r\n        feedControls={props.feedControls}\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n      />\r\n    );\r\n  } else if (props.feedControls.curState === \"invites\") {\r\n    // send a request for new data from API\r\n    // populate the ui\r\n    feedHTML = (\r\n      <InviteFeed\r\n        feedControls={props.feedControls}\r\n        actionControls={props.actionControls}\r\n        modalControls={props.modalControls}\r\n      />\r\n    );\r\n  }\r\n  return <div className={classes.root}>{feedHTML}</div>;\r\n}\r\n\r\nexport default Feed;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport AccountHome from \"components/profile/ProfileHome\";\r\nimport CalendarHome from \"components/calendar/CalendarHome\";\r\nimport LoadingWheel from \"components/index/LoadingWheel\";\r\nimport NotesHome from \"components/notes/NotesHome\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport Feed from \"./Feed\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n});\r\n\r\nfunction Body(props) {\r\n  const classes = useStyles();\r\n  const [actionOpenState, setActionOpenState] = useState(false);\r\n  const actionControls = {\r\n    isOpen: actionOpenState,\r\n    close: (e) => {\r\n      setActionOpenState(false);\r\n    },\r\n    open: () => {\r\n      setActionOpenState(true);\r\n    },\r\n    toggle: () => {\r\n      setActionOpenState(!actionOpenState);\r\n    },\r\n  };\r\n\r\n  let content = <LoadingWheel />;\r\n  if (props.bodyControls.curState === \"feed\") {\r\n    content = (\r\n      <Feed\r\n        feedControls={props.feedControls}\r\n        modalControls={props.modalControls}\r\n        actionControls={actionControls}\r\n\r\n      />\r\n    );\r\n  } else if (props.bodyControls.curState === \"notes\") {\r\n    content = <NotesHome />;\r\n  } else if (props.bodyControls.curState === \"calendar\") {\r\n    content = <CalendarHome />;\r\n  } else if (props.bodyControls.curState === \"account\") {\r\n    content = <AccountHome />;\r\n  }\r\n\r\n  return <div className={classes.root}>{content}</div>;\r\n}\r\n\r\nexport default Body;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport Colors from \"themes/colors\";\r\nimport BottomNav from \"./BottomNav\";\r\nimport Header from \"./Header\";\r\nimport Body from \"./Body\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 96px)\",\r\n    margin: \"48px 0 48px 0\",\r\n  },\r\n});\r\n\r\nconst Main = (props) => {\r\n  const [bodyState, setBodyState] = useState(\"feed\");\r\n  const [feedState, setFeedState] = useState(\"groups\");\r\n  const [feedItemState, setFeedItemState] = useState([\"\"]);\r\n  const [feedRefreshState, setFeedRefreshState] = useState(0);\r\n\r\n  const bodyControls = {\r\n    curState: bodyState,\r\n    setState: (input = \"feed\") => {\r\n      setBodyState(input);\r\n    },\r\n  };\r\n\r\n  const feedControls = {\r\n    curState: feedState,\r\n    groupParentID: feedItemState[0],\r\n    projectParentID: feedItemState[1],\r\n    taskParentID: feedItemState[2],\r\n    setState: (mode = \"groups\", parentUUID = []) => {\r\n      setFeedItemState([parentUUID]);\r\n      setFeedState(mode);\r\n    },\r\n    setStateGroups: () => {\r\n      setFeedState(\"groups\");\r\n      setFeedItemState([]);\r\n    },\r\n    setStateProjects: (parentUUID) => {\r\n      setFeedState(\"projects\");\r\n      setFeedItemState([parentUUID]);\r\n    },\r\n    setStateTasks: (parentUUID) => {\r\n      setFeedState(\"tasks\");\r\n      setFeedItemState([feedItemState[0], parentUUID]);\r\n    },\r\n    goBack: () => {\r\n      let newState = \"groups\";\r\n      if (feedState === \"projects\") {\r\n        newState = \"groups\";\r\n      } else if (feedState === \"tasks\") {\r\n        newState = \"projects\";\r\n      }\r\n      setFeedState(newState);\r\n    },\r\n    dropLastParentID: () => {\r\n      setFeedItemState(feedItemState.splice(feedItemState.length - 1, 1));\r\n    },\r\n    reRenderFeed: (delay = 10) => {\r\n      let oldVal = feedRefreshState;\r\n      if (oldVal > 500) {\r\n        oldVal = 0;\r\n      }\r\n      setTimeout(setFeedRefreshState(oldVal + 1), delay);\r\n    },\r\n  };\r\n\r\n  const classes = useStyles();\r\n  let content = (\r\n    <div>\r\n      <Header\r\n        modalControls={props.modalControls}\r\n        feedControls={feedControls}\r\n        bodyControls={bodyControls}\r\n      />\r\n      <div className={classes.root}>\r\n        <Body\r\n          bodyControls={bodyControls}\r\n          feedControls={feedControls}\r\n          modalControls={props.modalControls}\r\n        />\r\n      </div>\r\n      <BottomNav bodyControls={bodyControls} />\r\n    </div>\r\n  );\r\n\r\n  return <div>{content}</div>;\r\n};\r\n\r\nexport default Main;\r\n","import \"./css/main.css\";\r\nimport { Container, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { MainTheme, DarkTheme, ModalTheme, ModalThemedk } from \"themes/themes\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport LoginHome from \"components/login/LoginHome\";\r\nimport { checkForCacheUpdate, checkSignin, clearCache, prefCache } from \"cache\";\r\nimport Modal from \"components/Modal/Modal\";\r\nimport Main from \"components/Main/Main\";\r\nimport LoadingWheel from \"components/index/LoadingWheel\";\r\nimport myPallete from \"themes/colors\";\r\nimport { getMyPrefs } from \"actions/users\";\r\n\r\nconst App = () => {\r\n  const useStyles = makeStyles({\r\n    rootLight: {\r\n      background: myPallete.bg,\r\n      color: myPallete.dk,\r\n      padding: 0,\r\n    },\r\n    rootDark: {\r\n      background: myPallete.bgdk,\r\n      color: myPallete.li,\r\n      padding: 0,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const [appState, setAppState] = useState(\"main\");\r\n  const [themeState, setThemeState] = useState(MainTheme);\r\n  const [rootClassState, setRootClassState] = useState(classes.rootLight);\r\n  const [modalThemeState, setModalThemeState] = useState(ModalTheme);\r\n  const [appRefreshState, setAppRefreshState] = useState({ val: 1 });\r\n  const [modalState, setmodalState] = useState([false, \"\", {}]);\r\n\r\n  const appControls = {\r\n    curState: appState,\r\n    setState: (input = \"login\") => {\r\n      setAppState(input);\r\n    },\r\n    reRenderApp: async () => {\r\n      let oldVal = appRefreshState.val;\r\n      let val = oldVal + 1;\r\n      setAppRefreshState({ val });\r\n      // console.log(\"tried Refresh\");\r\n    },\r\n  };\r\n\r\n  const themeControls = {\r\n    curState: themeState,\r\n    rootState: rootClassState,\r\n    modalState: modalThemeState,\r\n    setState: (theme = MainTheme) => {\r\n      setThemeState(theme);\r\n    },\r\n    setRootState: (newClass) => {\r\n      setRootClassState(newClass);\r\n    },\r\n    setModalState: (theme) => {\r\n      setModalThemeState(theme);\r\n    },\r\n  };\r\n\r\n  // IIf user is signed in, get their preferences\r\n  if (checkSignin()) {\r\n    getMyPrefs();\r\n    checkForCacheUpdate(appControls.reRenderApp, \"prefData\");\r\n    const userPrefs = prefCache();\r\n    if (userPrefs) {\r\n      if (themeControls.curState !== DarkTheme && userPrefs.darkMode) {\r\n        themeControls.setState(DarkTheme);\r\n        themeControls.setRootState(classes.rootDark);\r\n        themeControls.setModalState(ModalThemedk);\r\n      } else if (themeControls.curState === DarkTheme && !userPrefs.darkMode) {\r\n        themeControls.setState(MainTheme);\r\n        themeControls.setRootState(classes.rootLight);\r\n        themeControls.setModalState(ModalTheme);\r\n      }\r\n    }\r\n  }\r\n\r\n  const modalControls = {\r\n    curState: modalState,\r\n    setState: (open = false, mode = \"\", data = {}) => {\r\n      setmodalState([open, mode, data]);\r\n    },\r\n    openMenu: () => {\r\n      setmodalState([true, \"menu\", {}]);\r\n    },\r\n  };\r\n\r\n  // use effect\r\n  const onRender = async () => {\r\n    console.log(\"Render\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    onRender();\r\n  }, []);\r\n\r\n  let appContent = <LoadingWheel variant=\"logo\" />;\r\n  // send the user to login page\r\n  if (!checkSignin() && appState !== \"login\") {\r\n    setAppState(\"login\");\r\n    clearCache();\r\n  }\r\n\r\n  // set the appcontent to match state before rendering\r\n  if (appState === \"login\") {\r\n    appContent = (\r\n      <ThemeProvider theme={MainTheme}>\r\n        <LoginHome appControls={appControls} />\r\n      </ThemeProvider>\r\n    );\r\n  } else if (appState === \"main\") {\r\n    appContent = <Main modalControls={modalControls} />;\r\n  } else if (appState === \"loading\") {\r\n    appContent = <LoadingWheel />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={themeControls.rootState}>\r\n        <ThemeProvider theme={themeControls.curState}>\r\n          {appContent}\r\n        </ThemeProvider>\r\n        <Modal\r\n          modalControls={modalControls}\r\n          appControls={appControls}\r\n          modalTheme={themeControls.modalState}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}